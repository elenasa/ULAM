## -*- mode:ulam -*-
#=t41119_test_compiler_element_operatoroverloadequal
##
##  gen code output: (+ 2 asserts)
##	 Int(4) Arg: 0x4
##
#!
Exit status: 4
Ue_Foo { Bool first(true);  Int fint(0);  Int opfint(0);  Int(4) m_i(0);  Int test() {  System s;  Foo f;  Foo g;  f m_i . 4 = g ( f )operator= . s ( g first . ! )assert . s ( g m_i . )print . s ( f m_i . g m_i . == )assert . f m_i . cast return } }
Uq_System { <NOMAIN> }
##
## first test to parse overload operator equal for an element
## informed by t41117.
##
#>Foo.ulam
  ulam 3;
element Foo {
  Bool first = true;
  Int fint, opfint;
  Int(4) m_i;
  Int test() {
    System s;
    Foo f,g;
    f.m_i = 4;

    g = f; //uses overload
    s.assert(!g.first);
    s.print(g.m_i); //prints 4
    s.assert(f.m_i == g.m_i);

    return f.m_i;
  }

  Void operator=(Self arg)
  {
    //self = arg; //recursive BEWARE!
    fint = arg.fint;
    opfint = arg.opfint;
    m_i = arg.m_i;
    first = false; //changes dm
  }
}

#:System.ulam
  ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}

#.
