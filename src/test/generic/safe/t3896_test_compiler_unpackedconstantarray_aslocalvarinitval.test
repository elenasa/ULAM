## -*- mode:ulam -*-
#=t3896_test_compiler_unpackedconstantarray_aslocalvarinitval
##
## gen output: (+ asserts)
##      Int Arg: 9
##      Int Arg: 9
##
#!
Exit status: 9
Ue_A { Int nineth(9);  typedef Int BigSite[10];  constant Int cSite[10] = { 0x0, 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9 };  Int test() {  System s;  Int site[10] = cSite;  self nineth . self ( site )func . = s ( self nineth . )print . s ( self nineth . 9 cast == )assert . Int site2[10];  site2 cSite = self nineth . self ( site2 )func . = s ( self nineth . )print . s ( self nineth . 9 cast == )assert . self nineth . return } }
Uq_System { <NOMAIN> }
##
## informed by 3704, initialize local variable with a constant array
##
#>A.ulam
  ulam 3;
use System;

element A {
  Int nineth;
  typedef Int BigSite[10];
  constant BigSite cSite = { 0,1,2,3,4,5,6,7,8,9 };
  Int func(BigSite sarr) {
    return sarr[9];
  }

  Int test(){
    System s;
    BigSite site = cSite; //initialized
    nineth = func(site); // == site[9]; both work.
    s.print(nineth);
    s.assert(nineth == 9);

    BigSite site2;
    site2 = cSite; //assignment
    nineth = func(site2); // == site[9]; both work.
    s.print(nineth);
    s.assert(nineth == 9);

    return nineth;
  }
}

#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
