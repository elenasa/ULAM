## -*- mode:ulam -*-
#=t3837_test_compiler_element_quarkrefatomof_issue
##
##  gen output (+ interleaved asserts)
##  Unsigned Arg: 1
##  Unsigned Arg: 96
##  Int Arg: 2
##
#!
Exit status: 2
Ue_Foo : QPerc { Int mi(2);  :QPerc< Bool bb(true); > Int test() {  System s;  Atom a = Foo.instanceof cast;  QPerc& qref = a cast;  Atom aqinas = qref.atomof cast;  self mi . qref ( )func . = s ( 1u )print . s ( true )assert . s ( 96u )print . s ( true )assert . s ( self mi . )print . self bb . self mi . 2 cast == = s ( self bb . )assert . self mi . return } }
Uq_QPerc { Bool bb(false);  <NOMAIN> }
Uq_System { <NOMAIN> }
##
## informed by t3835, a Dave ish 7/1/2016;
##
#>Foo.ulam
  ulam 2;
use QPerc;
element Foo : QPerc {

  Int mi = 0;
  virtual Int func()
  {
    return 2;
  }

  Int test() {
    System s;
    Atom a = Foo.instanceof; //init for test;
    QPerc& qref = (QPerc&) a;
    Atom aqinas = qref.atomof; //cannot generate usage CLASSIC->ILLEGAL_STATE
    mi = qref.func();
    s.print(qref.sizeof); // == 1
    s.assert(qref.sizeof == QPerc.sizeof);
    s.print(aqinas.sizeof); // == 96
    s.assert(aqinas.sizeof == Atom.sizeof);

    s.print(mi);
    bb = (mi == 2);
    s.assert(bb);
    return mi;
  }
}

#:QPerc.ulam
  ulam 2;
quark QPerc {
  Bool bb;
  virtual Int func()
  {
    return 1;
  }
}

#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
