## -*- mode:ulam -*-
#=t3974_test_compiler_stringarray_localinit_lengthof
##
## gen output: (+ interleaved asserts)
## Bool(3) Arg: 0x7 (true)
## String(7) Arg: "bar"
## Unsigned Arg: 4
## Unsigned Arg: 3
## Unsigned Arg: 5
## Unsigned Arg: 6
## Unsigned Arg: 8
##
#!
Exit status: 0
Ue_A { Bool b(true);  constant String cstrarr[2] = { "constant", "string" };  constant String cstr = "please";  Int test() {  SystemU3 su3;  String sarr[2] = { "fool", "bar" };  Bool(3) bun[2] = { false, true };  su3 ( bun 1 [] )print . su3 ( bun 1 [] cast )assert . Unsigned(8) asc = sarr 1 [] 2 [];  self b . asc 114u == = su3 ( sarr 1 [] )print . su3 ( self b . )assert . Unsigned len = 4u;  su3 ( len )print . su3 ( len 4u cast == )assert . sarr 0 [] "foo" = len 3u = su3 ( len )print . su3 ( len 3u cast == )assert . String bling = "bling";  sarr 0 [] bling = len 5u = su3 ( len )print . su3 ( len 5u cast == )assert . sarr 0 [] "please" = len 6u = su3 ( len )print . su3 ( len 6u cast == )assert . sarr 0 [] cstrarr 0 [] = len 8u = su3 ( len )print . su3 ( len 8u cast == )assert . 0 cast return } }
Uq_SystemU3 : System { :System<> <NOMAIN> }
Uq_System { <NOMAIN> }
##
## informed by t3973 and t3953 except function local variable is an initialized string array;
## also tests packloadable string array (not u64, array of 2 ints instead)
##
#>A.ulam
  ulam 3;
element A {
  Bool b;
  constant String cstrarr[] = {"constant", "string"};
  constant String cstr = "please";
 Int test() {
   SystemU3 su3;
   String sarr[2] = { "fool", "bar"};
   Bool(3) bun[2] = { false, true};

   su3.print(bun[1]);
   su3.assert(bun[1]);

   ASCII asc = sarr[1][2];
   b = (asc == 'r');
   su3.print(sarr[1]);
   su3.assert(b);

   //lengthof array item
   Unsigned len = sarr[0].lengthof;
   su3.print(len);
   su3.assert(len == 4u);

   //assignment string terminal to array item
   sarr[0] = "foo";
   len = sarr[0].lengthof;
   su3.print(len);
   su3.assert(len == 3u);

   //assignment string variable to array item
   String bling = "bling";
   sarr[0] = bling;
   len = sarr[0].lengthof;
   su3.print(len);
   su3.assert(len == 5u);

   //assignment constant string to array item
   sarr[0] = cstr;
   len = sarr[0].lengthof;
   su3.print(len);
   su3.assert(len == 6u);

   //assignment constant string array item to array item
   sarr[0] = cstrarr[0];
   len = sarr[0].lengthof;
   su3.print(len);
   su3.assert(len == 8u);

   return 0;
 }
}

#:SystemU3.ulam
  ulam 3;
quark SystemU3 : System {
  Void print(String s) native;
}

#:System.ulam
  ulam 1;
quark System {
  Void print(Unsigned arg) native;
  Void print(Int arg) native;
  Void print(Int(4) arg) native;
  Void print(Int(3) arg) native;
  Void print(Unary(3) arg) native;
  Void print(Bool(3) arg) native;
  Void assert(Bool b) native;
}
#.
