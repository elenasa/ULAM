## -*- mode:ulam -*-
#=t41042_test_compiler_whileascond
#!
Exit status: -11
Ue_EWE { Int test() {  EventWindow ew;  Int i = 0 cast;  ew ( 0 cast )aref . EWE.instanceof cast = Atom a = ew ( i )aref . cast;  { a EWE as cond { EWE& a;  a ( )foomethod . { i 4 cast < cond a.atomof ew ( i 1 ++ )aref . = if } } _1: while } i return } }
Uq_EventWindow { <NOMAIN> }
##
##  while-loop 'as' conditional, no parens, not part of a compound condition
##
#>EWE.ulam
  ulam 3;
element EWE{
  Int test() {
    EventWindow ew;
    Int i = 0;
    ew[0] = EWE.instanceof;
    Atom a = ew[i];
    while (a as EWE) { //WORKS!
      //while ((a as EWE)) { //Invalid while-condition (No parens!)
      //while (a as EWE && i < 4) { //Invalid statement
      a.foomethod();
      if (i < 4)
	a.atomof = ew[i++];
    }

    return i;
  }

  Void foomethod()
  {
  }

}

#:EventWindow.ulam
  ulam 3;
quark EventWindow{
  Atom& aref(Int index) native;
}

##    //EventWindow.ulam:3:1: ERROR: Only elements may have element parameters: <EventWindow> is a quark.
#.
