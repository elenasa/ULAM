## -*- mode:ulam -*-
#=t41260_test_compiler_element_expressionwithfunccall_order
##
## gen output: 2 asserts
##
#!
Exit status: 0
Ue_Foo { Int test() {  System s;  Foo f;  Unsigned var1 = f ( )func . 1u cast +b;  s ( var1 1u cast == )assert . Unsigned var2 = 1u cast f ( )func . +b;  s ( var2 1u cast == )assert . 0 cast return } }
Uq_System { <NOMAIN> }
##
## ish, informed by Dave 3/14/18 generated SPLAT code (see error/t41259)
##
#>Foo.ulam
  ulam 3;
element Foo {
  Unsigned func() { return 0; }
  Int test() {
    System s;
    Foo f;

    // Both orders work without the extra parens around the f.
    Unsigned var1 = f.func()+1u;
    s.assert(var1 == 1u);
    Unsigned var2 = 1u+f.func(); //fails with extra parens.
    s.assert(var2 == 1u);
    return 0;
  }
}

#:System.ulam
  ulam 1;
quark System {
  Void print(Unsigned arg) native;
  Void print(Int arg) native;
  Void print(Int(4) arg) native;
  Void print(Int(3) arg) native;
  Void print(Unary(3) arg) native;
  Void print(Bool(3) arg) native;
  Void assert(Bool b) native;
}
#.
