## -*- mode:ulam -*-
#=t3231_test_compiler_elementandquarkarray_elementLocalfunccall
#!
Exit status: -11
Ue_Foo { Bool b[3](false,false,false);  System s();  Int(4) m_i(0);  Int test() {  Poo spoon;  Bar boo;  boo spoon mbar 0 [] . = spoon mbar 1 [] . boo = Atom a;  a spoon sbar ( 0 cast )aref . . = spoon sbar ( 1 cast )aref . . a = spoon sbar . ( true )reset . Foo f;  f ( 0 cast )check . cast return } }
Uq_System { <NOMAIN> }
Uq_Bar { Bool val_b[3](false,false,false);  <NOMAIN> }
Ue_Poo { typedef Bar Pop[2];  System s();  Bool(3) b(false);  Int(4) m_i(0);  Bar mbar[2]( Bool val_b[3](false,false,false); ), ( Bool val_b[3](false,false,false); );  Bar sbar( Bool val_b[3](false,false,false); );  <NOMAIN> }
#>Foo.ulam
  ulam 1;
use System;
use Bar;
use Poo;
element Foo {
  System s;
  Bool b[3];
  Int(4) m_i;
  Bool check(Int idx){
    return b[idx];
  }
  Int test() {
    Poo spoon;
    Bar boo;
    boo = spoon.mbar[0];
    spoon.mbar[1] = boo;
    Atom a;
    a = spoon.sbar[0];
    spoon.sbar[1] = a;
    spoon.sbar.reset(true);
    Foo f;
    return (Int) f.check(0);
  }
}

#:Bar.ulam
  ulam 1;
quark Bar {
  Bool val_b[3];
  Void reset(Bool b) {
    b = false;
  }
  Atom& aref(Int index) native;
  //Void aset(Int index, Atom v) native;
}
#:System.ulam
  ulam 1;
quark System {
  Void print(Unsigned arg) native;
  Void print(Int arg) native;
  Void print(Int(4) arg) native;
  Void print(Int(3) arg) native;
  Void print(Unary(3) arg) native;
  Void print(Bool(3) arg) native;
  Void assert(Bool b) native;
}
#:Poo.ulam
  ulam 1;
use Bar;
element Poo{
  typedef Bar Pop[2];
  System s;
  Bool(3) b;
  Int(4) m_i;
  Pop mbar;
  Bar sbar;
}
#.
