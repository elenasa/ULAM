## -*- mode:ulam -*-
#=t3430_test_compiler_intermediatesaturation_issue
##      //correctly g and f are different!
#!
Exit status: 0
Ue_A { typedef Int(9) Foo;  Int(9) f(255);  Int(9) g(254);  Int test() {  self g . self f . 255 = = self f . self f . cast 1 cast +b cast 1 cast -b cast = self g . 1 cast += self g . 1 cast -= self f . self g . == cast return } }
#>A.ulam
  ulam 1;
element A {
  typedef Int(9) Foo;
  Foo f,g;
  Int test(){
    g = f = f.maxof;
    f = (Foo) (f + 1 - 1);
    g += 1;
    g -= 1;
    return (Int) (f == g);
  }
}
##
##      //aren't the same, but should be???
##      //bool rtn1 = fms->add("A.ulam"," element A {\ntypedef Int(9) Foo;\n Foo f;\n Int test(){\n f = f.maxof;\n f += 1;\n f-= 1;\n return f == f.maxof;\n }\n }\n"); //254
##
##      //bool rtn1 = fms->add("A.ulam","element A {\ntypedef Int(9) Foo;\n Foo f;\n Int test(){\nf = f.maxof;\n f = f + 1 - 1;\n return f == f.maxof;\n }\n }\n"); //255
##
##      // in fact, add anything>0 and subtract one gives the same answer.. so maxof == maxof +(1-1) == maxof +(x -1) == maxof +x != maxof +x -(x+1).
##      //bool rtn1 = fms->add("A.ulam","element A {\ntypedef Int(9) Foo;\n Foo f,g;\n Int test(){\ng = f = f.maxof;\n f = f + 19 - 1;\n g = g + 1 - 1;\n return f == g;\n }\n }\n");
##
#.
