## -*- mode:ulam -*-
#=t3409_test_compiler_quarkwithelementcast
##      /* gen code output:
##	 Int Arg: 1
##	 Int(3) Arg: 0x1
##
##      */
##      //eval self doesn't reflect correctly (see gen output): is an atom for quark's function call hidden arg
##
#!
Exit status: 1
Ue_Foo { System s();  IntXY(3u,4u) n( Int(3) x(1);  constant Unsigned xbits = 3u;  constant Unsigned ybits = 4u;  typedef Int(3) XCoord;  typedef Int(4) YCoord;  Int(4) y(2); );  Int test() {  self n . ( 1 cast 2 cast )init . Int i = self ( self n . )func .;  self s . ( i )print . self s . ( self n . x . )print . i return } }
Uq_IntXY(Unsigned xbits, Unsigned ybits) { typedef Int(UNKNOWN) XCoord;  typedef Int(UNKNOWN) YCoord;  Int(UNKNOWN) x(notready);  Int(UNKNOWN) y(notready);  <NOMAIN> }
Uq_System { <NOMAIN> }
#>Foo.ulam
  ulam 1;
use IntXY;
use System;
element Foo {
  System s;
  IntXY(3u,4u) n;
  Int func(IntXY(3u,4u) arg) {
    return arg.x;
  }
  Int test() {
    n.init(1,2);
    //    Int i = func((IntXY(3,4)) self);
    Int i = func(n);
    s.print(i);
    s.print(n.x);
    return i;
  }
}

#:IntXY.ulam
  ulam 1;
quark IntXY(Unsigned xbits, Unsigned ybits) {
  //  typedef IntXY(xbits, ybits) Self;
  typedef Int(xbits) XCoord;
  typedef Int(ybits) YCoord;
  XCoord x;
  YCoord y;
  Void init(Int ax, Int ay) {
    x = (XCoord) ax;
    y = (YCoord) ay;
    if(x == x.minof) ++x;
    if(y == y.minof) ++y;
  }
}
#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
