## -*- mode:ulam -*-
#=t3193_test_compiler_element_bitstype
## gen code output:
## Unsigned Arg: 1
## Unsigned Arg: 2
## Unsigned Arg: 3
## Bool(3) Arg: 0x1 (false)
## Bool(3) Arg: 0x2 (false)
## Bool(3) Arg: 0x3 (true)
#!
Exit status: 3
Ue_Foo { System s();  Bool sp(false);  Bits(3) m_i[3](1,2,3);  Bool(3) m_b[3](false,false,true);  Int test() {  self m_i . 0 [] 1 cast = self m_i . 1 [] 2 cast = self m_i . 2 [] self m_i . 0 [] self m_i . 1 [] | = self m_b . 0 [] self m_i . 0 [] cast = self m_b . 1 [] self m_i . 1 [] cast = self m_b . 2 [] self m_i . 2 [] cast = self s . ( self m_i . 0 [] cast )print . self s . ( self m_i . 1 [] cast )print . self s . ( self m_i . 2 [] cast )print . self s . ( self m_b . 0 [] )print . self s . ( self m_b . 1 [] )print . self s . ( self m_b . 2 [] )print . self m_i . 2 [] cast return } }
Uq_System { <NOMAIN> }
#>Foo.ulam
  ulam 1;
use System;
element Foo {
  System s;
  Bool sp;
  Bits(3) m_i[3];
  Bool(3) m_b[3];
  Int test() { m_i[0] = 1;
    m_i[1] = 2;
    m_i[2] = m_i[0] | m_i[1];
    m_b[0] = (Bool(3)) m_i[0];
    m_b[1] = (Bool(3)) m_i[1];
    m_b[2] = (Bool(3)) m_i [2];
    s.print((Unsigned) m_i[0]);
    s.print((Unsigned) m_i[1]);
    s.print((Unsigned) m_i[2]);
    s.print(m_b[0]);
    s.print(m_b[1]);
    s.print(m_b[2]);
    return (Int) m_i[2];
  }
}

##      // test system quark with native overloaded print funcs; assert
#:System.ulam
  ulam 1;
quark System {
  Void print(Unsigned arg) native;
  Void print(Int arg) native;
  Void print(Int(4) arg) native;
  Void print(Int(3) arg) native;
  Void print(Unary(3) arg) native;
  Void print(Bool(3) arg) native;
  Void assert(Bool b) native;
}
#.
