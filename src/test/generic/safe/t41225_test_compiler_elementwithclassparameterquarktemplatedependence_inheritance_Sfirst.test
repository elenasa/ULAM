## -*- mode:ulam -*-
#=t41225_test_compiler_elementwithclassparameterquarktemplatedependence_inheritance_Sfirst
##
##  gen output: (+ interleaved asserts)
##   Int(4) : 2
##   true
##   Int(4) : 3
##   false
##
## FAILED: ILLEGAL_ARGUMENT
#!
Exit status: 2
Ue_T { Int test() {  System sys;  E(true) et;  sys ( et 2 . )print . sys ( et 2 . 2 cast == )assert . sys ( et b . cast )print . sys ( et b . )assert . E(false) ef;  sys ( ef 3 . )print . sys ( ef 3 . 3 cast == )assert . sys ( ef b . cast )print . sys ( ef b . ! )assert . et 2 . cast return } }
Uq_S(Bool bp) : Q(flag) { constant Int(4) csi = bp ?  2 :  3;  :Q11< Bool b(notready);  Int(4) i(0); > <NOMAIN> }
Uq_Q(Bool flag) { Bool b(notready);  Int(4) i(0);  <NOMAIN> }
Uq_System { <NOMAIN> }
Ue_E(Bool bp) : S(bp) { /* empty class block */ }
##
##    //informed by t41222, except S has a dependent ancestor
##
#>T.ulam
 ulam 3;
use S; //NOT IRRELEVENT, see t41221
element T{
  Int test(){
    System sys;

    E(true) et;

    sys.print(et.csi);
    sys.assert(et.csi == 2);
    sys.print(et.b);
    sys.assert(et.b); //true


    //second test just to make sure
    E(false) ef;
    sys.print(ef.csi);
    sys.assert(ef.csi == 3);
    sys.print(ef.b);
    sys.assert(!ef.b); //false

    return et.csi; //2
  }
}

#:S.ulam
  ulam 3;
quark S(Bool bp) : Q(bp) {
  constant Int(4) csi = (bp ? 2 : 3); // = i not all constants anymore; also caught ish with merely =2!
}

#:Q.ulam
  ulam 1;
quark Q(Bool flag){
  Bool b = flag;
  Int(4) i;
}


#:E.ulam
  ulam 3;
element E(Bool bp) : S(bp) { }


#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
