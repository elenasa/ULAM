## -*- mode:ulam -*-
#=t3892_test_compiler_elementandquarkswclassargs_secwdefaultparamvaluefromanotherclass_localdefconstantarrayitem
##
## gen output (+ assert)
##  Unsigned Arg: 3
##
#!
Exit status: 3
Ue_P { Bool b(true);  Int test() {  System s;  Q(3,3u) w;  s ( 3u )print . self b . true = s ( self b . )assert . 3u cast return } }
Uq_Q(Int b = NONREADYCONST, Unsigned s = NONREADYCONST) { typedef Unsigned(UNKNOWN) Foo;  Unsigned(UNKNOWN) f(notready);  <NOMAIN> }
Uq_System { <NOMAIN> }
Uq_V(Int a) { Unsigned(UNKNOWN) vfoo(notready);  <NOMAIN> }
##
## informed by t3891,  class param 'b' for Q: provide first arg, based on a P localdef constant array item, with second class param dependent on it
##
#>P.ulam
  ulam 3;
use Q;  //double localdefs ok
local constant Int by[4] = {1};
element P {
  Bool b;
  Int test() {
    System s;
    Q(by[2]*3) w; //first arg provided here, based on P localdef constant array
    s.print(w.sizeof);
    b = (w.sizeof == 3);
    s.assert(b);
    return (Int) w.sizeof;
  }
}

#:Q.ulam
  ulam 3;
use V;
quark Q(Int b = by[1], Unsigned s = V(b).sizeof) {
  typedef Unsigned(s) Foo;
  Foo f;
}
local constant Int by[] = {1, 2, 3, 4};

#:V.ulam
  ulam 1;
quark V(Int a) {
  Unsigned(a) vfoo;
}


#:System.ulam
  ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}

#.
