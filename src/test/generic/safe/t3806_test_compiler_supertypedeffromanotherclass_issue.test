## -*- mode:ulam -*-
#=t3806_test_compiler_supertypedeffromanotherclass_issue
##  gen code output (+ assert):
##  Unsigned Arg: 5
##
#!
Exit status: 5
Ue_Block : Content { typedef Bits(5) MyTag;  Unsigned tagsize(5u);  :Content< constant Unsigned cQID_TAG_BITS = 5u;  constant Unsigned cQID_DOG_BITS = 4u;  constant Unsigned cQID_DOG_TRIGGER = 15u;  :QID(0xfeedf00d,5u,4u,15u)< typedef Bits(5) MyTag;  constant Unsigned(5) cQID_TAG_BITS = 5u;  constant Bits speciesID = -17960947u;  constant Unsigned(5) myTagBits = 5u;  constant Unsigned(5) myProgressBits = 4u;  constant Unsigned triggerLevel = 15u;  constant Bits cSPECIES_ID = -17960947u;  Bits(5) mTag(0); >> ^QID(0xfeedf00d,5u,4u,15u)< typedef Bits(5) MyTag;  constant Unsigned(5) cQID_TAG_BITS = 5u;  constant Bits speciesID = -17960947u;  constant Unsigned(5) myTagBits = 5u;  constant Unsigned(5) myProgressBits = 4u;  constant Unsigned triggerLevel = 15u;  constant Bits cSPECIES_ID = -17960947u;  Bits(5) mTag(0); > Int test() {  System s;  self tagsize . 5u = s ( 5u )print . s ( self tagsize . 5u cast == )assert . self tagsize . cast return } }
Uq_Content : QID(0xfeedf00d,5u,4u,15u) { constant Unsigned cQID_TAG_BITS = 5u;  constant Unsigned cQID_DOG_BITS = 4u;  constant Unsigned cQID_DOG_TRIGGER = 15u;  :QID(0xfeedf00d,5u,4u,15u)< constant Bits cSPECIES_ID = 4277006349u;  constant Unsigned(5) cQID_TAG_BITS = 5u;  typedef Bits(5) MyTag;  Bits(5) mTag(0); > <NOMAIN> }
Uq_System { <NOMAIN> }
Uq_QID(Bits speciesID, Unsigned(5) myTagBits, Unsigned(5) myProgressBits, Unsigned triggerLevel) { constant Bits cSPECIES_ID = speciesID;  constant Unsigned(5) cQID_TAG_BITS = myTagBits;  typedef Bits(UNKNOWN) MyTag;  Bits(UNKNOWN) mTag(notready);  <NOMAIN> }
##
## informed by issue 6/20/2016
##
#>Block.ulam
  ulam 2;
element Block : Content
{
  typedef Content.Super.MyTag MyTag;
  Unsigned tagsize;
  Int test() {
    System s;
    tagsize = MyTag.sizeof;
    s.print(MyTag.sizeof);
    s.assert(tagsize == 5u);
    return (Int) tagsize;
  }
}

#:Content.ulam
  ulam 2;
quark Content : QID(0xFEEDF00Du, 5, 4, 15) {
  constant Unsigned cQID_TAG_BITS = 5;
  constant Unsigned cQID_DOG_BITS = 4;
  constant Unsigned cQID_DOG_TRIGGER = 15;
}

#:QID.ulam
  ulam 2;
quark QID(Bits speciesID, Unsigned(5) myTagBits, Unsigned(5) myProgressBits, Unsigned triggerLevel) {
  constant Bits cSPECIES_ID = speciesID;

  constant Unsigned(5) cQID_TAG_BITS = myTagBits;
  typedef Bits(cQID_TAG_BITS) MyTag;
  MyTag mTag;
}

#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
