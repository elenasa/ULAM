## -*- mode:ulam -*-
#=t3776_test_compiler_dmquarkarray_unpacked
##
## gen output: (+ asserts)
##  Unsigned Arg: 70
##  Bool(3) Arg: 0x7 (true)
##
#!
Exit status: 0
Ue_A { Bool b(true);  Bar c[70]( Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(false);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true);  Bool b(true); );  System s();  Int test() {  self s . ( 70u )print . self s . ( true )assert . self c . 10 [] b . false = self b . self c . 10 [] b . ! = self s . ( self b . cast )print . self s . ( self b . )assert . 0 cast return } }
Uq_Bar { Bool b( true);  <NOMAIN> }
Uq_System { <NOMAIN> }
##
## informed by t3773
##
#>A.ulam
  ulam 2;
element A {
  Bool b;
  Bar c[70];

  System s;
  Int test() {
    s.print(c.sizeof);
    s.assert(c.sizeof == 70);
    c[10].b = false;
    b = (!c[10].b);
    s.print(b);
    s.assert(b);
    return 0;
  }
}

#:Bar.ulam
  ulam 2;
quark Bar {
  Bool b = true;
}

#:System.ulam
  ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
