## -*- mode:ulam -*-
#=t3419_test_compiler_packedarray_asfuncarg
##
## gen output (+ assert)
##  Int Arg: 3
##
#!
Exit status: 3
Ue_A { Int ans(3);  typedef Int(3) BigSite[10];  Int test() {  System s;  Int(3) site[10] = self ( )func2 .;  Int(3) site2[10] = site;  self ans . self ( site )func . = s ( self ans . )print . s ( self ans . 3 cast == )assert . self ( site )func . return } }
Uq_System { <NOMAIN> }
##
##      //informed by error/t3417_
##      //no binaryop+ even for packed array (site1 + site2).
##      //./A.ulam:15:23: ERROR: Incompatible (nonscalar) types, LHS: Int(3)[10], RHS: Int(3)[10] for binary operator+.
#>A.ulam
  ulam 1;
element A {
  Int ans;
  typedef Int(3) BigSite[10];
  Int func(BigSite sarr) {
    return sarr[9];
  }
  BigSite func2() {
    BigSite s;
    for(Int i = 0; i < 10; ++i){
      s[i] = (Int(3)) i;
    }
    return s;
  }
  Int test(){
    System s;
    BigSite site = func2();
    BigSite site2 = site /*+ site2*/;
    ans = func(site);
    s.print(ans);
    s.assert(ans == 3); //==saturated 9
    return func(site);
  }
}

#:System.ulam
  ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}

#.
