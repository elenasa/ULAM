## -*- mode:ulam -*-
#=t3872_test_compiler_elementinheritance_loadlocaldefs_separatefilescope
##   gen output:  (2 interleaved asserts + 1)
##  Unsigned Arg: 4
##  Unsigned Arg: 3
##
#!
Exit status: 3
Ue_Foo : Soo(3u) { Bool(7) sp(true);  Unsigned a(3u);  :Soo(3u)< Unsigned(3) us(4u);  constant Unsigned(3) v = 3u; > Int test() {  System s;  Foo f;  self a . f us . cast = s ( self a . )print . s ( self a . 4u cast == )assert . self a . 3u = s ( self a . )print . s ( self a . 3u cast == )assert . self sp . self ( )func . cast = s ( self sp . cast )assert . self a . cast return } }
Uq_Soo(Unsigned(3) v) { Unsigned(UNKNOWN) us(notready);  <NOMAIN> }
Uq_System { <NOMAIN> }
##
## test of local defs: different file scopes, but load same local defs, informed by t3859
## (see also t41130); fixed (ulam-6) thanks to Dave's ish 8/14/24.
##
#>Foo.ulam
  ulam 3;
load Constants;

element Foo : Soo3 {
  Bool(7) sp;
  Unsigned a = 73;
  Int test() {
    System s;
    Foo f;
    a = f.us;
    s.print(a);
    s.assert(a == 4u);
    a = Soo3.sizeof;
    s.print(a);
    s.assert(a == 3u);

    sp = func();
    s.assert(sp);
    return (Int) a; //=3
  }
}

#:Soo.ulam
  ulam 2;
load Constants;

quark Soo(Unsigned(3) v) {
  Unsigned(v) us = 4u;
  Bool check()
  {
    return us.sizeof == soosize; //uses its local constant
  }
  Bool func()
  {
    if(self is Soo3) //uses its local typedef
      return check();
    return false;
  }
}

#:Constants.ulam
local constant Unsigned(3) soosize = 3u;
local typedef Soo(soosize) Soo3;

#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
