## -*- mode:ulam -*-
#=t3558_test_compiler_element_inheritancewcaarray_isparse
##
##  gen output: (1 assert)
##
#!
Exit status: -11
Ue_EventWindowTest : EvtWinEl { constant Int v = -2;  :EvtWinEl< Int m_idx(40); > Int test() {  System s;  Atom a;  EventWindowTest ewt;  a ewt ( 0 cast )aref . = s ( a EventWindowTest is )assert . 0 cast return } }
Uq_EvtWinEl { Int m_idx( 40);  <NOMAIN> }
Uq_System { <NOMAIN> }
##
##      // element may be a custom array! inherited no less!!
##      // informed by t3338
##
#>EventWindowTest.ulam
  ulam 2;
use EvtWinEl;
element EventWindowTest : EvtWinEl {
  constant Int v = -2;
  Int test() {
    System s;
    Atom a;
    EventWindowTest ewt;
    //ewt[0] = a; STALE_ATOM
    a = ewt[0];  // This is me!
    s.assert(a is EventWindowTest);
    return 0;
 }
}

#:EvtWinEl.ulam
  ulam 2;
quark EvtWinEl {
  Int m_idx = 40;
  Atom& aref(Int index)
  {
    //Atom a; //on the stack
    return self.atomof;
  }
}

#:System.ulam
  ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}

#.
