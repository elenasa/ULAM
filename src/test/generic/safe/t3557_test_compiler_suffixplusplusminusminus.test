## -*- mode:ulam -*-
#=t3557_test_compiler_suffixplusplusminusminus
##
## gen output (interleaved asserts)
##  Int Arg: 1
##  Int Arg: 0
##  Unsigned Arg: 0
##  Unsigned Arg: 1
##  Unsigned Arg: 2
##  Unsigned Arg: 1
##  Unsigned Arg: 2
##  Unsigned Arg: 3
##
#!
Exit status: 0
Ue_Foo { typedef Unsigned(8) ARGB[4];  System s();  Int test() {  Int a;  a 1 ++ self s . ( a )print . self s . ( a 1 cast == )assert . a 1 -- self s . ( a )print . self s . ( a 0 cast == )assert . self ( )func . self ( )wunc . a return } }
Uq_System { <NOMAIN> }
##
## tests post increment, post decrement (no longer an error test)
##
#>Foo.ulam
  ulam 2;
element Foo {
  System s;
  typedef Unsigned(8) ARGB[4];
  Void func() {
    ARGB val;
    for (Int i = 0; i < 3; i++)
      val[i] = (Unsigned(8)) i;

    for (Unsigned i = 0; i < 3u; i++)
    {
      Bool b = val[i] == i;
      s.print((Unsigned) val[i]);
      s.assert(b);
    }
  }

  Void wunc() {
    ARGB val;
    Unsigned i = 0;
    while(i++ < 3u)
      val[i] = (Unsigned(8)) i; //1, 2, 3, not 0

    i = 0;
    while(i++ < 3u)
    {
      s.print(i); //1, 2, 3, not 0
      Bool b = (val[i] == i);
      s.assert(b);
    }
  }

  Int test() {
    Int a;
    a++;
    s.print(a);
    s.assert(a == 1);
    a--;
    s.print(a);
    s.assert(a == 0);

    func();
    wunc();
    return a;
  }
}

#:System.ulam
  ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}

#.
