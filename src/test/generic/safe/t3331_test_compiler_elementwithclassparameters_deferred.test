## -*- mode:ulam -*-
#=t3331_test_compiler_elementwithclassparameters_deferred
##      /* gen code output:
##	 Unsigned Arg: 6
##	 Unsigned Arg: 3
##	 Bool(3) Arg: 0x0 (false)
##	 Unsigned Arg: 96
##	 Unsigned Arg: 96
##	 Bool(3) Arg: 0x7 (true)
##      */
##      //Constants have explicit types
##
#!
Exit status: 6
Ue_T { Bool(3) b(false);  Unsigned i(6u);  Unsigned j(96u);  System s();  Bool(3) c(true);  Int test() {  Unsigned x;  Unsigned y;  S(1,2) m;  self i . 6u = x m ( )func . cast = self b . self i . x == cast = self s . ( self i . )print . self s . ( x )print . self s . ( self b . )print . self j . 96u = y 96u = self c . self j . y == cast = self s . ( self j . )print . self s . ( y )print . self s . ( self c . )print . self i . cast return } }
Uq_System { <NOMAIN> }
Uq_S(Int x, Int y) { Int(UNKNOWN) i(notready);  Int(UNKNOWN) j(notready);  <NOMAIN> }
##    //informed by t3330
##    // here we set i using S(1,2).sizeof
##
#>T.ulam
  ulam 1;
use System;
use S;
element T{
  System s;
  Unsigned i,j;
  Bool(3) b,c;
  Int test(){
    Unsigned x,y;
    S(1,2) m;
    i = S(1,2).sizeof;
    x = (Unsigned) m.func(); b = (i == x);
    s.print(i);
    s.print(x);
    s.print(b);
    j = self.sizeof;
    y = T.sizeof;
    c = (j == y);
    s.print(j);
    s.print(y);
    s.print(c);
    return (Int) i;
  }
}
##      //rtn2 and rtn1 here match the answer perfectly!
##      //bool rtn2 = fms->add("T.ulam"," ulam 1;\nuse System;\nuse S;\n element T{\nSystem s;\nUnsigned i,j;\nBool(3) b,c;\n Int test(){\nUnsigned x,y;\n S(1,2) m;\ni = m.sizeof;\n x = m.func(); b = (i == x);\n s.print(i);\ns.print(x);\n s.print(b);\n j = self.sizeof;\ny = T.sizeof;\n c = (j == y);\n s.print(j);\n s.print(y);\n s.print(c);\n return i;\n}\n }\n");
##      //bool rtn1 = fms->add("S.ulam"," ulam 1;\nquark S(Int x, Int y){\nInt(x+y) i,j;\n Int func(){\nreturn (x + y);\n}\n }\n");
##

#:S.ulam
  ulam 1;
quark S(Int x, Int y){
  Int(x+y) i,j;
  Int func(){
    return  /* S(x,y).sizeof*/ (x + y) /* Int(x+y).sizeof */ /* i.sizeof*/;
  }
}
##      //infinite loop 'S(x+y,n) s;' with x+y as class arg!
##      //note: quark self.sizeof returns 96 (an atom's size).
##      //note: S(x,y).sizeof in S returns UNKNOWN (-2 == 2147483647).
##      //i.sizeof "Invalid Statement (possible missing semicolon)"; though in T, b.sizeof returns 3;
##      //Int(x+y).sizeof "Invalid Statement (possible missing semicolon)"; though in T, Bool(3) returns 3;
##

#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
