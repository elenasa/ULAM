## -*- mode:ulam -*-
#=t3540_test_compiler_quarkinheritanceswithfunc_local
## gencode output: (interleaved asserts)
##Int Arg: -1
##Int Arg: 1
##Unsigned Arg: 11
##
#!
Exit status: 11
Ue_Foo { System s();  Bool first(true);  Int test() {  Soo su;  self first . su cb . cast = { su ( )check . cond { self s . ( su lu . cast )print . self s . ( su lu . -1 cast == )assert . su lu . 1u cast = self s . ( su lu . cast )print . self s . ( su lu . 1 cast == )assert . self s . ( 11u )print . self s . ( true )assert . 11u cast return } if } 0 cast return } }
Uq_Soo : Coo { Unsigned(3) us( 4u);  :Coo< Bool(3) cb( true); > ^Loo< Int(5) lu( -1); > <NOMAIN> }
Uq_System { <NOMAIN> }
Uq_Coo : Loo { Bool(3) cb( true);  :Loo< Int(5) lu( -1); > <NOMAIN> }
Uq_Loo { Int(5) lu( -1);  <NOMAIN> }
##
## quark inheritances, regular (non-template), with func as local variable
## informed by t3536,3538
##
#>Foo.ulam
  ulam 2;
use Soo;
use System;
element Foo {
  System s;
  Bool first;
  Int test() {
    Soo su;
    first = su.cb;
    if(su.check())
    {
      s.print(su.lu);
      s.assert(su.lu == -1);
      su.lu = 1u;
      s.print(su.lu);
      s.assert(su.lu == 1);
      s.print(su.sizeof);
      s.assert(su.sizeof == 11);
      return su.sizeof;
    }
    return 0;
  }
}

#:Soo.ulam
  ulam 2;
use Coo;
quark Soo : Coo {
  Unsigned(3) us = 4u;
}

#:Coo.ulam
  ulam 2;
use Loo;
quark Coo : Loo {
  Bool(3) cb = true;
  Bool check()
  {
    return cb;
  }
}

#:Loo.ulam
  ulam 2;
quark Loo {
  Int(5) lu = -1;
}

#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}

#.
