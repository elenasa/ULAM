## -*- mode:ulam -*-
#=t3449_test_compiler_bitwisefunccallreturns
#!
Exit status: 5
Ue_T { typedef Unary(7) B;  typedef Bits(7) C;  Unary(7) m(5u);  Unary(7) n(2u);  Unary(7) r(5u);  Unary(7) a(2u);  Unary(7) h(3u);  Int test() {  self m . self ( )func1 . = self n . self ( )func2 . = self r . self ( )func1 . cast self ( )func2 . cast | cast = self a . self ( )func1 . cast self ( )func2 . cast & cast = self h . self ( )func1 . cast self ( )func2 . cast ^ cast = self r . cast return } }
#>T.ulam
  ulam 1;
element T{
  typedef Unary(7) B;
  typedef Bits(7) C;
  B m,n,r,a,h;
  B func1() {
    return '\5';
  }
  B func2() {
    return '\2';
  }
  Int test(){
    m = func1();
    n = func2();
    r =  (B) ((C) func1() | (C) func2());
    a =  (B) ((C)func1() & (C)func2());
    h = (B) ((C) func1() ^ (C) func2());
    return r;
  }
}

##
##      //explicit cast to Bits(7), T.
##      //./T.ulam:15:14: ERROR: Bits is the supported type for bitwise operator&; Suggest casting Unary(7) and Unary(7) to Bits(7).
##      // unary: bitwise-or is the max, bitwise-and is the min, bitwise-xor is the (max - min)
##      // trying funcs return octal (couldn't do bit values).
##
#.
