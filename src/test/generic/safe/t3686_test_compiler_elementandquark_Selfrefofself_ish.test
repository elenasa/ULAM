## -*- mode:ulam -*-
#=t3686_test_compiler_elementandquark_Selfrefofself_ish
##      gen code output: (1 asserts)
##
#!
Exit status: 1
Ue_A : QW { Bool b(false);  Bool c(false);  :QW< Bool bw(true); > Int test() {  System s;  self bw . true = QW q = self ( )func .;  s ( q bw . )assert . q bw . cast return } }
Uq_System { <NOMAIN> }
Uq_QW { Bool bw(false);  <NOMAIN> }
##
## Dave requested a way to get default values for Self (within a quark);
## a loophole, since a quark would be an undefined atom, but as a ref, its done (t3679)
## As of ulam-3, loophole no longer needed; now it is a runtime check, rather than compile time restriction.
##
#>A.ulam
  ulam 2;
use System;
use QW;
element A : QW {
  Bool b, c;
  Int test(){
    System s;
    bw = true;
    QW q = func();
    s.assert(q.bw);
    return (Int) q.bw;
  }
}

#:QW.ulam
  ulam 2;
quark QW {
  Bool bw;
  Self func()
  {
    Self& sr = self; //compiles
    return sr;
  }
}

#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
