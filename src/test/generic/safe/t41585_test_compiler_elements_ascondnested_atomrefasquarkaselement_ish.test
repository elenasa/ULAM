## -*- mode:ulam -*-
#=t41585_test_compiler_elements_ascondnesed_atomrefasquarkaselement_ish
##
## gen code output: (1 assert)
##
#!
Exit status: 0
Ue_Ish5 : System { Int ans(1);  :System<> Int test() {  E1 e1;  E2 e2;  Atom a1 = e1 cast;  Atom& a1ref = a1 cast;  { a1ref QBase as cond { QBase& a1ref;  { a1ref E1 as cond { E1& a1ref;  self ( a1ref ( )func . 1 cast == )assert . self ans . 1 cast = } if } } if } 0 cast return } }
Ue_E1 : QBase { :QBase<> <NOMAIN> }
Ue_E2 { <NOMAIN> }
Uq_System { <NOMAIN> }
Uq_QBase { <NOMAIN> }
##
## informed by ish-example 10/23/2021, and t3638: only as-cond on same atom ref; see also error/t41326.
##
#:Ish5.ulam
  ulam 2;
use E1;
use E2;
use System;
element Ish5 : System {
  Int ans;
  Int test() {
    E1 e1;
    E2 e2;
    Atom a1 = e1;
    Atom & a1ref = a1;
    if (a1ref as QBase) {
      if (a1ref as E1) {
	assert((a1ref.func() == 1)); //shouldn't fail
	ans = 1;
      }
    }
    return 0;
  }
}

#:E1.ulam
  ulam 2;
use QBase;
element E1 : QBase {
  Int func() { return 1; }
}

#:QBase.ulam
  ulam 2;
quark QBase {
  Int func() { return 4; }
}

#:E2.ulam
  ulam 2;
element E2 {
  Int func() { return 2; }
}

#:System.ulam
  ulam 1;
quark System {
  Void print(Unsigned arg) native;
  Void print(Int arg) native;
  Void print(Int(4) arg) native;
  Void print(Int(3) arg) native;
  Void print(Unary(3) arg) native;
  Void print(Bool(3) arg) native;
  Void assert(Bool b) native;
}

#.
