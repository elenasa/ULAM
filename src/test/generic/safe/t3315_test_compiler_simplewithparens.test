## -*- mode:ulam -*-
#=t3315_test_compiler_simplewithparens
##      /* gen code output:
##	 Int Arg: 32
##      */
##      // constant fold: barne 1 3 +b 8 * = s
##
#!
Exit status: 32
Ue_A { Bool(7) b(false);  System s();  Int barne(32);  Int test() {  self barne . 32 cast = self s . ( self barne . )print . self barne . return } }
Uq_System { <NOMAIN> }
#>A.ulam
  ulam 1;
use System;
element A {
  System s;
  Bool(7) b;
  Int barne;
  Int test() {
    barne = (1 + 3) * 8;
    s.print(barne);
    return barne;
  }
}

#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
