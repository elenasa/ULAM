## -*- mode:ulam -*-
#=t3802_test_compiler_element_refargfunccall_localvarsdmatom
##      /* gen code output (interleaved asserts):
##	 Unary(3) Arg: 0x1
##	 Int(4) Arg: 0x3
##       */
#!
Exit status: -11
Ue_R { System s();  Int test() {  EW ew;  Foo f;  f m_a . ew cast = Atom& atref = f m_a . cast;  f m_i . 3 cast = f ( f m_a . cast )check . { atref EW as cond { EW& atref;  self s . ( atref mun . )print . self s . ( atref mun . cast 1u cast == )assert . } if } self s . ( f m_i . )print . self s . ( f m_i . 3 cast == )assert . f m_i . cast return } }
Uq_System { <NOMAIN> }
Ue_EW { Unary(3) mun( 7u);  <NOMAIN> }
Un_Foo { System s();  Int(4) m_i(0);  EW m_e( Unary(3) mun( 7u); );  Atom m_a(Atom);  <NOMAIN> }
##
## informed by t3801
##
#>R.ulam
  ulam 2;
use System;
element R {
  System s;
  Int test() {
    EW ew;
    Foo f; //local storage transient
    //EW & eref = f.m_e; //what does gencode look like?
    f.m_a = ew; //to know atom's type
    Atom & atref = f.m_a; //what does gencode look like?
    f.m_i = 3;
    f.check(f.m_a);    //f.check(f.m_e);
    if(atref as EW)
    {
      s.print(atref.mun); //should be =1
      s.assert(atref.mun == 0x1);
    }
    s.print(f.m_i);
    s.assert(f.m_i == 3);
    return f.m_i;
  }
}

#:Foo.ulam
  ulam 2;
transient Foo {
  System s;
  Int(4) m_i;
  EW m_e;
  Atom m_a;
  Void check(Atom& atok) {
    if(atok as EW)
    {
      if (m_i < 7)
	atok.mun = 0x1;
      else
	atok.mun = 0x2;
    }
    return;
  }
}

#:EW.ulam
  ulam 2;
element EW {
  Unary(3) mun = 0x3;
}

#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
