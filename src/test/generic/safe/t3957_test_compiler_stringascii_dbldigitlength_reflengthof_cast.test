## -*- mode:ulam -*-
#=t3957_test_compiler_stringascii_dbldigitlength_reflengthof_cast
##
## gen output: (+ 2 asserts)
##  Unsigned Arg: 11
##
#!
Exit status: 0
Ue_A { constant String str = "hello world";  Unsigned slen(11u);  Unsigned(8) asc(104u);  Bool b1(true);  Bool b2(true);  Int test() {  System s;  String newstr = "hello world" cast;  String& refstr = newstr cast;  self slen . 11u = s ( self slen . )print . self b1 . self slen . 11u cast == = s ( self b1 . )assert . self asc . refstr 0 [] = self b2 . self asc . 104u == = s ( self b2 . )assert . 0 cast return } }
Uq_System { <NOMAIN> }
##
## tests double-digit length string, lengthof string reference, and casting String to String.
##
#>A.ulam
  ulam 3;
element A {
  constant String str = "hello world";
  Unsigned slen;
  ASCII asc;
  Bool b1, b2;
  Int test() {
    System s;
    String newstr = (String) str; //cast unnecessary! but okay!
    String& refstr = newstr;

    slen = refstr.lengthof;
    s.print(slen);
    b1 = (slen == 11u);
    s.assert(b1);

    asc = refstr[0];
    b2 = (asc == 'h');
    s.assert(b2);
    return 0;
 }
}

#:System.ulam
  ulam 1;
quark System {
  Void print(Unsigned arg) native;
  Void print(Int arg) native;
  Void print(Int(4) arg) native;
  Void print(Int(3) arg) native;
  Void print(Unary(3) arg) native;
  Void print(Bool(3) arg) native;
  Void assert(Bool b) native;
}
#.
