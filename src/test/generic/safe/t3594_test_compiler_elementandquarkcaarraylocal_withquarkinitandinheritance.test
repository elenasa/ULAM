## -*- mode:ulam -*-
#=t3594_test_compiler_elementandquarkcaarraylocal_withquarkinitandinheritance
##
## gencode output (interleaved asserts):
## Bool(3) Arg: 0x7 (true)
## Bool(3) Arg: 0x0 (false)
##
#!
Exit status: 0
Ue_Foo { Bool(3) b(true);  typedef Car Pop[2];  System s();  Bool(3) c(false);  Car sbar( Bool cb(true);  :Bar< Bool val_b[3](false,false,false); >);  Int test() {  Car m_bar2[2];  Unary(2) i = 0 cast;  self b . m_bar2 i cast [] cb . cast = self s . ( self b . )print . self s . ( self b . cast )assert . m_bar2 i cast [] cb . false = self c . m_bar2 i cast [] cb . cast = self s . ( self c . )print . self s . ( self c . ! cast )assert . 0 cast return } }
Uq_System { <NOMAIN> }
Uq_Car : Bar { Bool cb( true);  :Bar< Bool val_b[3](false,false,false); > <NOMAIN> }
Uq_Bar { Bool val_b[3](false,false,false);  <NOMAIN> }
##
## informed by 3543, m_bar2 is a local array here
##
#>Foo.ulam
  ulam 2;
use System;
use Car;
element Foo {
  typedef Car Pop[2];
  System s;
  Bool(3) b, c;
  Car sbar;
  Bool check(Int v) {
    return true;
  }
  Int test() {
    Pop m_bar2;
    Unary(2) i = 0;

    b = m_bar2[i].cb; //read case

    s.print(b); //true, should be
    s.assert(b); //true, should be

    m_bar2[i].cb = false; //write case

    c = m_bar2[i].cb; //read case

    s.print(c); //false
    s.assert(!c);

    return 0;
  }
}

#:Car.ulam
  ulam 2;
use Bar;
quark Car : Bar {
  Bool cb = true;
}

#:Bar.ulam
  ulam 2;
quark Bar {
  Bool val_b[3];
  Void reset(Bool b) {
    b = false; //noop
  }
  Atom& aref(Int index) native;
  //Void aset(Int index, Atom v) native;
}

#:System.ulam
  ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
