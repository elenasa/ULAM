## -*- mode:ulam -*-
#=t3372_test_compiler_namedconstantwithshift
##      /* gen code output:
##	 Bool(3) Arg: 0x7 (true)
##       */
##      //different casts since Constants have explicit types
#!
Exit status: 4
Ue_A { Bool(3) b(true);  System s();  Int test() {  Counter(3u) c;  self b . c ( 0u cast 1u cast )isEarlier . = self s . ( self b . )print . c ( )thanWhat . cast return } }
Uq_System { <NOMAIN> }
Uq_Counter(Unsigned bits) { typedef Unsigned(UNKNOWN) Count;  <NOMAIN> }
#>A.ulam
  ulam 1;
use System;
use Counter;
element A{
  System s;
  Bool(3) b;
  Int test () {
    Counter(3u) c;
    b = c.isEarlier(0u, 1u);
    s.print(b);
    return  c.thanWhat();
  }
}

##      //had to add u for (bits -1u) because both are constants, mixed signs, 32 bits.
#:Counter.ulam
  ulam 1;
quark Counter(Unsigned bits) {
  typedef Unsigned(bits) Count;
  Bool(3) isEarlier(Count a, Count b) {
    if (a < b)
      return (b - a) < (Count) (1<< (bits-1u));
    return (a - b) > (Count) (1 << (bits-1u));
  }
  Count thanWhat() {
    return (Count) (1 << 2u) /*(bits-1u))*/;
  }
}
#:System.ulam
  ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
##
##      //simplify #1 for testing: is it the namedconstantwithshiftbits?
##      //bool rtn1 = fms->add("A.ulam","use Counter;\nelement A{\nBool(3) b;\nInt test () {\nCounter(3u) c;\n return  c.thanWhat();\n}\n}\n");
##      //bool rtn2 = fms->add("Counter.ulam", "quark Counter(Unsigned bits) {\n  typedef Unsigned(bits) Count;\nCount thanWhat() {\nreturn (1u<<(bits-1));\n  }\n }\n");
##
##
##      //simplify #2 for testing: compare with RHS constant fold, missing parentnode.
##      //bool rtn1 = fms->add("A.ulam","use Counter;\nelement A{\nBool(3) b;\nInt test () {\nCounter(3u) c;\n b = c.isEarlier(0u, 1u);\n return  0;\n}\n}\n");
##      //bool rtn2 = fms->add("Counter.ulam", "quark Counter(Unsigned bits) {\n  typedef Unsigned(bits) Count;\nBool(3) isEarlier(Count a, Count b) {\n /*if (a < b)\n return (b - a) < (1u<<(bits-1));\n*/ return /*(a - b) > (1u<<(bits-1))*/ a > (bits - 1);\n  }\n }\n");
##
##
#.
