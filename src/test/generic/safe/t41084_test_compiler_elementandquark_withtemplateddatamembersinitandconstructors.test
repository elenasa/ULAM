## -*- mode:ulam -*-
#=t41084_test_compiler_elementandquark_withtemplateddatamembersinitandconstructors
##
## gen output: (interleaved asserts)
## Int Arg: 9
## Bool(3) Arg: 0x7 (true)
## Bool(3) Arg: 0x0 (false)
## Bool(3) Arg: 0x0 (false)
## Int Arg: 9
## Int Arg: 7
## Int Arg: 7
##
#!
Exit status: 7
Ue_A { Bar(true) bar( Bool b(true);  constant Bool bp = true; );  Int(4) a(3);  Int(4) b(4);  Bool(7) d(true);  Int test() {  System s;  Bar(true) localbar = localbar ( false )Self .;  A locala = locala ( 2 cast 9 cast )Self .;  s ( self a . cast self b . cast +b cast )print . s ( self a . cast self b . cast +b 9 == )assert . s ( self bar . b . cast )print . s ( self bar . b . )assert . s ( localbar b . cast )print . s ( localbar b . ! )assert . s ( locala d . cast )print . s ( locala d . ! cast )assert . s ( locala a . cast locala b . cast +b cast )print . s ( locala a . cast locala b . cast +b 9 == )assert . A localaa = localaa ( false )Self .;  s ( localaa a . cast localaa b . cast +b cast )print . s ( localaa a . cast localaa b . cast +b 7 cast == )assert . s ( self a . 1 cast -= cast self b . 1 cast -= cast +b cast )print . s ( self a . cast self b . cast +b 7 cast == )assert . self a . cast self b . cast +b cast return } }
Uq_Bar(Bool bp) { Bool b(notready);  <NOMAIN> }
Uq_System { <NOMAIN> }
##
## first parsing test of template class constructors!!
## informed by t41077, except Bar has class parameter instead of dm initialization.
##
#>A.ulam
  ulam 3;
element A {
  Bar(true) bar;
  Int test(){
    System s;
    Bar(true) localbar(false); //first time template class constructor used!!
    Self locala(2, 9); //no confusion Self var with constructor call

    //self, default
    s.print(a+b); // =9
    s.assert(a+b == 9);
    s.print(bar.b); // true
    s.assert(bar.b);

    //local variables
    s.print(localbar.b); //false
    s.assert(!localbar.b); //default reset by constructor

    s.print(locala.d); //reset to false
    s.assert(!locala.d);

    s.print(locala.a + locala.b); //2 + 7 (maxof)
    s.assert(locala.a + locala.b == 9);

    A localaa(false);
    s.print(localaa.a + localaa.b); //=7
    s.assert(localaa.a + localaa.b == 7);

    //self again..
    s.print(--a + --b); //=7
    s.assert(a + b == 7);
    return (a + b); //7
  }

  Bool(7) d = true;
  Int(4) a = 4;
  Int(4) b = 5;

  Self(Int a1, Int b1)
  {
    a = (Int(4)) a1;
    b = (Int(4)) b1;
    d = false;
    return; //optional
  }

  //note: called after the default values are set!
  Self(Bool b1)
  {
    if(b1)
    {
      a++;
      b++;
    }
    else
    {
      a--;
      b--;
    }
    d = b1;
    return; //optional
  }
}

#:Bar.ulam
  ulam 3;
quark Bar(Bool bp)
{
  Self(Bool barg)
  {
    b = barg; //first template constructor in the history of ulam!!
  }

  Bool b = bp;
}

##
## test system quark with native overloaded print funcs; assert
#:System.ulam
  ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}

#.
