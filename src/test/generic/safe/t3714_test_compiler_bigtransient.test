## -*- mode:ulam -*-
#=t3714_test_compiler_bigtransient
##
## gen output: (+ assert)
##  Int Arg: 551
##
## unevaluable
##
#!
Exit status: -11
Ue_Foo { Int ta(9);  Int test() {  System s;  Too t;  t ( 551u cast )set . self ta . t ( )get . = s ( self ta . )print . t sp . self ta . 551u cast == cast = s ( t sp . cast )assert . self ta . return } }
Un_Too { Bool(7) sp(false);  Int a( 87);  Foo f[5]( Int ta( 9); ), ( Int ta( 9); ), ( Int ta( 9); ), ( Int ta( 9); ), ( Int ta( 9); );  Bits bits(0);  <NOMAIN> }
Uq_System { <NOMAIN> }
##
## based on t3711, FIRST TRANSIENT TEST EVER in the history of the universe!!!
##
#>Foo.ulam
  ulam 2;
use Too;
use System;
element Foo {
  Int ta = 9;
  Int test() {
    System s;
    Too t;
    t.set(t.sizeof);
    ta = t.get();
    s.print(ta);
    t.sp = (ta == t.sizeof);
    s.assert(t.sp);
    return ta;
  }
}

#:Too.ulam
  ulam 2;
transient Too {
  Bool(7) sp;
  Int a = 87;
  Foo f[5];
  Bits bits;
  Int get()
  {
    return a;
  }
  Void set(Int arg)
  {
    a = arg;
  }
  //  Int test() { NO TESTS in TRANSIENTS
}

#:System.ulam
ulam 1;
quark System {Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}

#.
