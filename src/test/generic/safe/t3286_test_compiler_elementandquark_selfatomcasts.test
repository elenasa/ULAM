## -*- mode:ulam -*-
#=t3286_test_compiler_elementandquark_selfatomcasts
##
## gen output:
## Int Arg: 0
## assert: arg is 1
## after asserts abort: arg is 1
##
##
##  in Bar.func(), a.instanceof overkill, with kill being the operative word for eval purposes.
#!
Exit status: 0
Ue_Foo { Int rtn(0);  Int test() {  System s;  Atom a;  Bar b;  a b ( self cast )func . = { a Foo is cond self rtn . 0 cast = if self rtn . 1 cast = else } s ( self rtn . )print . s ( self rtn . 0 cast == )assert . self rtn . return } }
Uq_Bar { <NOMAIN> }
Uq_System { <NOMAIN> }
##
##      // in element, 'self' is an element: cast self to an atom arg, and as RHS.
##      // in quark, 'self' is a quark, 'atom' is an atom: cannot cast self to an atom (rhs)
##
#>Foo.ulam
  ulam 1;
use Bar;
use System;
element Foo {
  Int rtn = -1;

  Int test(){
    System s;
    Atom a;
    Bar b;
    a = b.func((Atom) self);
    //a = (Atom) self;
    if(a is Self)
      rtn = 0;
    else
      rtn = 1;
    s.print(rtn);
    s.assert(rtn == 0);
    return rtn;
  }
}

#:Bar.ulam
quark Bar {
  Atom func(Atom a){
    Atom t = a.instanceof; //was self.instanceof
    return t;
  }
}

#:System.ulam
  ulam 1;
quark System {
  Void print(Unsigned arg) native;
  Void print(Int arg) native;
  Void print(Int(4) arg) native;
  Void print(Int(3) arg) native;
  Void print(Unary(3) arg) native;
  Void print(Bool(3) arg) native;
  Void assert(Bool b) native;
}

#.
