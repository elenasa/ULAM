## -*- mode:ulam -*-
#=t41278_test_compiler_constantquarkclasswithstringdm
##
## gen output: (+ double interleaved asserts)
##   String(1) Arg: "qmel"
##   String(1) Arg: "qmel"
##   String(1) Arg: "cool" (single assert)
##   String(13) Arg: "neat"  (single assert)
##
#!
Exit status: 0
Ue_KeyExprRep { constant QBar cqbar = { 0x10000 };  Int test() {  SystemU3 s;  String mystr[2] = ckeyexpr cqstr .;  s ( mystr 0 [] )print . s ( mystr 0 [] 2 [] 101u == )assert . s ( mystr 0 [] 3 [] ckeyexpr cqstr 0 [] 3 [] . == )assert . constant String mycstr[2] = ckeyexpr cqstr .;  s ( mycstr 0 [] )print . s ( mycstr 0 [] 2 [] 101u == )assert . s ( mycstr 0 [] 3 [] ckeyexpr cqstr 0 [] 3 [] . == )assert . String mystr3 = ckeyexpr qstr .;  s ( mystr3 )print . s ( mystr3 0 [] 99u == )assert . String mystr4 = cqbar qstr .;  s ( mystr4 )print . s ( mystr4 0 [] 110u == )assert . 0 cast return } }
Uq_QBar { constant String cqstr[2] = { "qmel", "qlem" };  String qstr( "neat");  <NOMAIN> }
Uq_SystemU3 : System { :System<> <NOMAIN> }
Uq_System { <NOMAIN> }
##
## Informed by t41267 except trying to reach gencode to read constant class with String cos; or constant array of strings
##
##
#>KeyExprRep.ulam
  ulam 3;
use QBar;
local constant QBar ckeyexpr = { .qstr = "cool" };
element KeyExprRep {
  constant QBar cqbar = { };
  Int test() {
    SystemU3 s;

    //constant quark with constant string array dm, into local funcvar
    String mystr[2] = ckeyexpr.cqstr; //look at gen code
    s.print(mystr[0]); //qmel
    s.assert(mystr[0][2] == 'e');
    s.assert(mystr[0][3] == ckeyexpr.cqstr[0][3]);

    //constant quark with constant string array dm, into constant funcvar
    constant String mycstr[2] = ckeyexpr.cqstr; //look at gen code
    s.print(mycstr[0]); //qmel
    s.assert(mycstr[0][2] == 'e');
    s.assert(mycstr[0][3] == ckeyexpr.cqstr[0][3]);

    //initialized variable of constant quark, string, into local funcvar
    String mystr3 = ckeyexpr.qstr;
    s.print(mystr3); //cool
    s.assert(mystr3[0] == 'c');

    //un-initialized variable of dm constant quark, string, into local funcvar
    String mystr4 = cqbar.qstr;
    s.print(mystr4); //neat
    s.assert(mystr4[0] == 'n');

    return 0;
  }
}

#:QBar.ulam
  ulam 3;
quark QBar {
  constant String cqstr[2] = { "qmel", "qlem" };
  String qstr = "neat";
}

#:SystemU3.ulam
  ulam 3;
quark SystemU3 : System {
  Void print(String s) native;
}

#:System.ulam
  ulam 1;
quark System {
  Void print(Unsigned arg) native;
  Void print(Int arg) native;
  Void print(Int(4) arg) native;
  Void print(Int(3) arg) native;
  Void print(Unary(3) arg) native;
  Void print(Bool(3) arg) native;
  Void assert(Bool b) native;
}
#.
