## -*- mode:ulam -*-
#=t41523_test_compiler_elementinheritance_withmultiplelocaldefskeywordpriority
#!
Exit status: 3
Ue_Foo : Moo { Bool(7) spf(true);  Bool(7) spg(true);  Bool(7) spb(true);  :Moo< Unsigned(3) us(4u); > Int test() {  System s;  Unsigned a = 73 cast;  Foo f;  a f us . cast = a 3u = s ( a )print . self spf . a 3u cast == cast = s ( self spf . cast )assert . Gah g;  self spg . true cast = s ( 3u )print . s ( self spg . cast )assert . Bar b;  self spb . true cast = s ( 32u )print . s ( self spb . cast )assert . a cast return } }
Uq_Moo { Unsigned(3) us( 4u);  <NOMAIN> }
Uq_System { <NOMAIN> }
Ue_Gah : Moo { Moo m_moo( Unsigned(3) us( 4u); );  :Moo< Unsigned(3) us( 4u); > <NOMAIN> }
Ue_Bar : Moo { typedef Int Moo;  Int m_moo(0);  :Moo< Unsigned(3) us( 4u); > <NOMAIN> }
##
## informed by t41517, Bar uses typedef w local specificity; but gets member typedef. Fixed.
## see also t41519;
##
#>Foo.ulam
  ulam 3;
local constant Moo cMoo = { };
element Foo : local.Moo {
  Bool(7) spf, spg, spb;
  Int test() {
    System s;
    Unsigned a = 73;
    Foo f;
    a = f.us;
    a = Moo.sizeof;
    s.print(a);
    spf = (a == 3u);
    s.assert(spf);

    Gah g;
    spg = g.m_moo.sizeof==3u;
    s.print(g.m_moo.sizeof);
    s.assert(spg);

    Bar b;
    spb = b.m_moo.sizeof==32u;
    s.print(b.m_moo.sizeof);
    s.assert(spb);

    return (Int) a; //=3
  }
}

#:Gah.ulam
  ulam 5;
local typedef Moo LMoo;
element Gah : Moo {
  local.Moo m_moo;
}

#:Bar.ulam
  ulam 5;
element Bar : local.Moo { //uses member typedefclass, even with a local;
  //element Bar : Moo { //uses member typedef, wo local specificity!! see t41517
  typedef Int Moo; //shadows a class name
  Moo m_moo; //=32
}

#:Moo.ulam
  ulam 1;
quark Moo {
  Unsigned(3) us = 4u;
}


#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}

#.
