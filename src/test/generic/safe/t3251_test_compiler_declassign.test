## -*- mode:ulam -*-
#=t3251_test_compiler_declassign
##      /* gen code output:
##	 Int Arg: 8
##	 Int Arg: 7
##	 Int Arg: 7
##	 Int Arg: 2
##	 Int Arg: 4
##	 Int Arg: 8
##	 Int Arg: 16
##      */
#!
Exit status: 16
Ue_A { Bool(7) b(false);  System s();  Int d(16);  Int e(0);  Int test() {  Int a = 8 cast;  Int f = 7 cast;  Int g = f;  Int h;  self s . ( a )print . self s . ( f )print . self s . ( g )print . self d . 1 cast = { a 0 cast != cond { self d . self d . cast 1 cast << cast = self s . ( self d . )print . a a cast 1 cast >> cast = } _1: while } self d . return } }
Uq_System { <NOMAIN> }
#>A.ulam
  ulam 1;
use System;
element A {
  System s;
  Bool(7) b;
  Int d,e;
  Int test(){Int a = 8, f = 7, g = f, h;
    s.print(a);
    s.print(f);
    s.print(g);
    d = 1;
    while(a!=0){
      d = (Int) (d << 1);
      s.print(d);
      a = (Int) (a >> 1);
    }
    return d;
  }
}

##      // shifts require explicit casting
##
##      // test system quark with native overloaded print funcs; assert
#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
