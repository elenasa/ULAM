## -*- mode:ulam -*-
#=t3289_test_compiler_primitive_minmaxsizeof_bytype
##      /* gen code output:
##	 Unsigned Arg: 4
##	 Int(4) Arg: 0x8
##	 Int(4) Arg: 0x7
##	 Unsigned Arg: 32
##	 Unsigned Arg: 0
##	 Unsigned Arg: 4294967295
##	 Unsigned Arg: 3
##	 Unary(3) Arg: 0x0
##	 Unary(3) Arg: 0x3
##	 Unsigned Arg: 3
##	 Bool(3) Arg: 0x0 (false)
##	 Bool(3) Arg: 0x7 (true)
##	 Unsigned Arg: 2
##      */
##      // minof, maxof related to lhs type ; sizeof always unsigned
##      //constant fold minus
#!
Exit status: 0
Ue_Fu { System s();  Int test() {  self s . ( 4u )print . ; self s . ( -8 )print . self s . ( 7 )print . self s . ( 32u )print . self s . ( 0u )print . self s . ( 4294967295u )print . self s . ( 3u )print . self s . ( 0u )print . self s . ( 7u )print . self s . ( 3u )print . self s . ( 0u )print . self s . ( 7u )print . self s . ( 2u )print . 0 cast return } }
Uq_System { <NOMAIN> }
#>Fu.ulam
  ulam 1;
use System;
element Fu {
  System s;
  Int test(){
    s.print(Int(4).sizeof);
    ;
    s.print(Int(4).minof);
    s.print(Int(4).maxof);
    s.print(Unsigned.sizeof);
    s.print(Unsigned.minof);
    s.print(Unsigned.maxof);
    s.print(Unary(3).sizeof);
    s.print(Unary(3).minof);
    s.print(Unary(3).maxof);
    s.print(Bool(3).sizeof);
    s.print(Bool(3).minof);
    s.print(Bool(3).maxof);
    s.print(Bits(2).sizeof);
    /* i = t.minof;
     */ return 0;
  }
}

##      // similar to t3287 except using types instead of variables.
##
##      // uncovered problem with type of the values for maxof, minof, sizeof; not related to lhs type.
##      //bool rtn1 = fms->add("Fu.ulam", "ulam 1;\nuse System;\nelement Fu {\nSystem s;\nInt test(){\ns.print(Bool(3).maxof);\n return 0;\n}\n}\n");
#:System.ulam
  ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
