## -*- mode:ulam -*-
#=t3273_test_compiler_unsignedthreebit_plusequal_issue
##      /* gen code output:
##	 Unsigned Arg: 1
##	 Unsigned Arg: 1
##	 Unsigned Arg: 1
##	 Unsigned Arg: 2
##	 Unsigned Arg: 2
##	 Unsigned Arg: 2
##	 Unsigned Arg: 3
##	 Unsigned Arg: 3
##	 Unsigned Arg: 3
##	 Unsigned Arg: 4
##	 Unsigned Arg: 4
##	 Unsigned Arg: 4
##	 Unsigned Arg: 5
##	 Unsigned Arg: 5
##	 Unsigned Arg: 5
##	 Unsigned Arg: 6
##	 Unsigned Arg: 6
##	 Unsigned Arg: 6
##	 Unsigned Arg: 7
##	 Unsigned Arg: 7
##	 Unsigned Arg: 7
##	 Unsigned Arg: 7
##	 Unsigned Arg: 7
##	 Unsigned Arg: 7
##	 Unsigned Arg: 7
##	 Unsigned Arg: 7
##	 Unsigned Arg: 7
##	 Unsigned Arg: 7
##	 Unsigned Arg: 7
##	 Unsigned Arg: 7
##	 Unsigned Arg: 7
##	 Unsigned Arg: 7
##	 Unsigned Arg: 7
##	 Unsigned Arg: 7
##	 Unsigned Arg: 7
##	 Unsigned Arg: 7
##      */
#!
Exit status: 0
Ue_A { System s();  Int test() {  Unsigned(3) x = 0 cast;  Unsigned(3) y = 0 cast;  Unsigned(3) z = 0 cast;  { Int i = 0 cast;  i 12 cast < cond { x 1 cast += self s . ( x cast )print . y 1 cast += self s . ( y cast )print . z z cast 1 cast +b cast = self s . ( z cast )print . } _1: i 1 += while } 0 cast return } }
Uq_System { <NOMAIN> }
#>A.ulam
  ulam 1;
use System;
element A {
  System s;
  Int test(){
    Unsigned(3) x = 0, y = 0, z = 0;
    for(Int i = 0; i < 12; ++i){
      x+=1;
      s.print(x);
      ++y;
      s.print(y);
      z = (Unsigned(3)) (z + 1);
      s.print(z);
    }
    return 0;
  }
}

##      // ++, += 1 and z = z + 1 all the same; saturates.
#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
