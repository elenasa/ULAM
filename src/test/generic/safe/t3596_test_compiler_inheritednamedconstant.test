## -*- mode:ulam -*-
#=t3596_test_compiler_inheritednamedconstant
##     /* gen code output (+assert):
##	 Int Arg: 8
##       */
##      //different casts since Constants have explicit types
##      // constant fold: j 1 7 +b =, 1 6u cast +b
##
#!
Exit status: 8
Ue_A : B { Int j(8);  :B< constant Int cOW = 7;  typedef Int(3) Bar[2];  Int(3) jar[2](0,0); > Int test() {  System s;  self j . 8 = s ( self j . )print . s ( self j . 8 cast == )assert . self j . return } }
Uq_System { <NOMAIN> }
Uq_B { constant Int cOW = 7;  typedef Int(3) Bar[2];  Int(3) jar[2](0,0);  <NOMAIN> }
##
## informed by 3324
##
#>A.ulam
  ulam 2;
use System;
use B;
element A : B{
  Int j;
  Int test () {
    System s;
    j = 1 + cOW;
    s.print(j);
    s.assert(j == 8);
    return j;
  }
}

#:B.ulam
  ulam 2;
quark B{
  constant Int cOW = 1 + B.sizeof;
  typedef Int(3) Bar[2];
  Bar jar;
}

#:System.ulam
  ulam 1;
quark System {
  Void print(Unsigned arg) native;
  Void print(Int arg) native;
  Void print(Int(4) arg) native;
  Void print(Int(3) arg) native;
  Void print(Unary(3) arg) native;
  Void print(Bool(3) arg) native;
  Void assert(Bool b) native;
}
#.
