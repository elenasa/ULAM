## -*- mode:ulam -*-
#=t3666_test_compiler_unpackedarrayreference_primitive
##      /* gen code output:
##	 Int Arg: 0
##	 Int Arg: 1
##	 Int Arg: 2
##	 Int Arg: 3
##	 Int Arg: 4
##	 Int Arg: 5
##	 Int Arg: 6
##	 Int Arg: 7
##	 Int Arg: 8
##	 Int Arg: 9
##      */
#!
Exit status: 10
Ue_A { System s();  typedef Int BigSite[10];  typedef Int& BSRef[10];  typedef Int& BRR[10];  Int test() {  Int site[10];  Int& siteref[10] = site cast;  Int& brr[10] = siteref;  { Int i = 0 cast;  i 10 cast < cond { siteref i [] i = self s . ( brr i [] )print . } _1: i 1 += while } 10 cast return } }
Uq_System { <NOMAIN> }
##
## informed by t3276 (see t3667 for packed primitive)
##
#>A.ulam
  ulam 2;
use System;
element A {
  System s;
  typedef Int BigSite[10]; //try packed first!
  typedef BigSite & BSRef;
  typedef BSRef BRR;

  Int test(){
    BigSite site;
    BSRef siteref = site;
    BRR brr = siteref; //ref to ref
    for(Int i = 0; i < 10; ++i){
      siteref[i] = i;
      s.print(brr[i]);
    }
    return 10;
  }
}

#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
