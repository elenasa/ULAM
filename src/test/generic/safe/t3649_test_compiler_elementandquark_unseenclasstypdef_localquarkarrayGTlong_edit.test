## -*- mode:ulam -*-
#=t3649_test_compiler_elementandquark_unseenclasstypedef_localquarkarrayGTlong_edit
##
## gen output: assert
##./Foo.ulam:7:5: ERROR: EVAL: Unpacked array of quarks is unsupported:  Bar(7) with variable symbol name 'tar'.
#!
Exit status: 1
Ue_Foo { Bar(7) b( constant Int x = 7;  Bits(7) m_bits(0); );  constant Int cx = 7;  typedef Bar(7) Tar;  Int test() {  System s;  Bar(7) tar[10];  tar 3 [] ( 1 cast )set . s ( 1 cast tar 3 [] ( )toInt . == )assert . tar 3 [] ( )toInt . return } }
Uq_System { <NOMAIN> }
Uq_Bar(Int x) { Bits(UNKNOWN) m_bits(notready);  <NOMAIN> }
##
## informed by t3647 (order matters)
## To turn off eval, defined SKIP_EVAL in src/test/TestCase_EndToEndCompiler.cpp
##
#>Foo.ulam
  ulam 1;
use System;
element Foo {
  constant Int cx = 7;
  typedef Bar(cx + 0) Tar;
  Tar b;
  Int test() {
    System s;
    Tar tar[10];
    tar[3].set(1);
    s.assert(1 == tar[3]);
    return tar[3];
  }
}
use Bar;

#:Bar.ulam
  ulam 1;
quark Bar(Int x) {
  Bits(x) m_bits;
  Int toInt()
  {
    return (Int) m_bits;
  }
  Void set(Int i)
  {
    m_bits = (Bits(x)) i;
  }
}

#:System.ulam
  ulam 1;
quark System {
  Void print(Unsigned arg) native;
  Void print(Int arg) native;
  Void print(Int(4) arg) native;
  Void print(Int(3) arg) native;
  Void print(Unary(3) arg) native;
  Void print(Bool(3) arg) native;
  Void assert(Bool b) native;
}

#.
