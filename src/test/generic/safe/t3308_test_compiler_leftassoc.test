## -*- mode:ulam -*-
#=t3308_test_compiler_leftassoc
##      /* gen code output:
##	 Int Arg: 1
##       */
##      //constant folded: a 1 1 -b 1 +b = s
##
#!
Exit status: 1
Ue_A { Bool(7) b(false);  System s();  Int a(1);  Int test() {  self a . 1 cast = self s . ( self a . )print . self a . return } }
Uq_System { <NOMAIN> }
#>A.ulam
  ulam 1;
use System;
element A {
  System s;
  Bool(7) b;
  Int a;
  Int test() {
    a = 1 - 1 + 1;
    s.print(a);
    return a;
  }
}

##      // test system quark with native overloaded print funcs; assert
#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
