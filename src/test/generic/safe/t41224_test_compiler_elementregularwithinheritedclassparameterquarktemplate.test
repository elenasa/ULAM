## -*- mode:ulam -*-
#=t41224_test_compiler_elementregularwithinheritedclassparameterquarktemplate
##
##  gen output: (+ interleaved asserts)
##   Int(4) : 7
##   true
#!
Exit status: 7
Ue_T { Int test() {  System sys;  E e;  sys ( e csi . )print . sys ( e csi . 7 == )assert . sys ( e v . b . cast )print . sys ( e v . b . )assert . e csi . cast return } }
Uq_System { <NOMAIN> }
Ue_E : S(0x8,true) { /* empty class block */ }
Uq_S(Q(flag) v, Bool bp) { Int(4) csi(notready);  <NOMAIN> }
Uq_Q(Bool flag) { Bool b(notready);  constant Int(4) i = 7;  <NOMAIN> }
##
##    //informed by t41223, except E is regular
##
#>T.ulam
 ulam 3;
//use S; //NOT IRRELEVENT?
element T{
  Int test(){
    System sys;


    E e;

    sys.print(e.csi);
    sys.assert(e.csi == 7);
    sys.print(e.v.b);
    sys.assert(e.v.b); //true
    return e.csi;
  }
}

#:S.ulam
  ulam 3;
quark S(Q(bp) v, Bool bp) {
  Int(4) csi = v.i;
}

#:Q.ulam
  ulam 1;
quark Q(Bool flag){
  Bool b = flag;
  constant Int(4) i = 7;
}


#:E.ulam
  ulam 3;
local constant Q(true) cqt = { };
element E : S(cqt, true) { }


#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
