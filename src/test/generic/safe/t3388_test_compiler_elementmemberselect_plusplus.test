## -*- mode:ulam -*-
#=t3388_test_compiler_elementmemberselect_plusplus
##  gen code output: (+ interleaved asserts)
##	 Int(4) Arg: 0x5
##	 Int(4) Arg: 0x7
##	 Int(4) Arg: 0x7
##	 Int(4) Arg: 0x6
##	 Int(4) Arg: 0x6
##
#!
Exit status: 5
Ue_Foo { System s();  Int(4) m_i(0);  Int test() {  Foo f;  f m_i . 5 = self s . ( f m_i . 1 cast ++ )print . self s . ( f m_i . 6 == )assert . self s . ( f m_i . 1 cast += )print . self s . ( f m_i . 7 == )assert . self s . ( f m_i . 1 cast += )print . self s . ( f m_i . 7 == )assert . self s . ( f m_i . 1 cast -= )print . self s . ( f m_i . 6 == )assert . self s . ( f m_i . 1 cast -- )print . self s . ( f m_i . 5 == )assert . f m_i . cast return } }
Uq_System { <NOMAIN> }
##
##      //informed by 3146; tests saturation and prefix and postfix plus plus, minus minus, on member selected
##
#>Foo.ulam
  ulam 1;
element Foo {
  System s;
  Int(4) m_i;
  Int test() {
    Foo f;
    f.m_i = 5;
    s.print(f.m_i++); //prints 5
    s.assert(f.m_i == 6);
    s.print(++f.m_i); //prints 7
    s.assert(f.m_i == 7);
    s.print(++f.m_i); //saturates 7
    s.assert(f.m_i == 7);

    s.print(--f.m_i); // 6
    s.assert(f.m_i == 6);
    s.print(f.m_i--); //still prints 6
    s.assert(f.m_i == 5); //now 5
    return f.m_i;
  }
}

#:System.ulam
  ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
