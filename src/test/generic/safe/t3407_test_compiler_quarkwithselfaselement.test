## -*- mode:ulam -*-
#=t3407_test_compiler_quarkwithselfaselement
##  gen code output (+ assert):
##	 Int Arg: 1
##	 Int Arg: 2
##
#!
Exit status: 2
Ue_ElT : Typo { Int i(2);  :Typo<> Int test() {  System s;  s ( self i . 0 cast == )assert . Atom mar = self cast;  self ( mar cast )incr . self mar cast = s ( self i . )print . self ( mar cast )incr . self mar cast = s ( self i . )print . s ( self i . 2 cast == )assert . self i . return } }
Uq_Typo { <NOMAIN> }
Uq_System { <NOMAIN> }
#>ElT.ulam
  ulam 1;
element ElT : Typo {
  Int i;
  Int test() {
    System s;
    s.assert(i == 0);
    Atom mar = self;
    incr(mar);
    self = (ElT) mar;
    s.print(i);
    incr(mar);
    self = (ElT) mar;
    s.print(i);
    s.assert(i == 2);
    return i;
  }
}

#:Typo.ulam
quark Typo {
  Void incr(Atom& aref){
    //Atom a = self.storageof; //atom; //self;
    if(aref as ElT) {
      aref.i += 1;
      //self = a; //can't cast ElT& to Typo&, unless subclasso
    }
    //self.storageof = a; //atom = a; //self = a; invalid lhs
    //self = (Typo) a; //ILLEGAL_ARGUMENT
  }
 }
#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
