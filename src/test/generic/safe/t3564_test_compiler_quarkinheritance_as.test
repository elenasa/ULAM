## -*- mode:ulam -*-
#=t3564_test_compiler_quarkinheritance_as
## gencode output (asserts):
## Bool(3) Arg: 0x7 (true)
## Unsigned Arg: 3
##
#!
Exit status: 3
Ue_Foo : Soo { System s();  Bool first(true);  Soo su( Unsigned(3) us(4u);  :Coo< Bool(3) cb(true); >);  :Soo< Unsigned(3) us(4u);  :Coo< Bool(3) cb(true); >> ^Coo< Bool(3) cb(true); > Int test() {  Foo f;  { f Coo as cond { Coo& f;  self first . f cb . cast = self s . ( self first . cast )print . self s . ( self first . )assert . self s . ( 3u )print . self s . ( true )assert . 3u cast return } if } 0 cast return } }
Uq_Soo : Coo { Unsigned(3) us( 4u);  :Coo< Bool(3) cb( true); > <NOMAIN> }
Uq_System { <NOMAIN> }
Uq_Coo { Bool(3) cb( true);  <NOMAIN> }
##
## quark inheritance, regular (non-template) with casting
## informed by t3560, t3536, t3559
##
#>Foo.ulam
  ulam 2;
use Soo;
use System;
element Foo : Soo {
  System s;
  Bool first;
  Soo su;
  Int test() {
    Foo f;
    //'has' NO LONGER works like 'as'
    if(f as Coo)
    {
      first = f.cb;
      s.print(first);
      s.assert(first);
      s.print(f.sizeof);
      s.assert(f.sizeof == 3);
      return f.sizeof;
    }
    return 0;
  }
}

#:Soo.ulam
  ulam 2;
use Coo;
quark Soo : Coo {
  Unsigned(3) us = 4u;
}

#:Coo.ulam
  ulam 2;
quark Coo {
  Bool(3) cb = true;
}

#:System.ulam
  ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}

#.
