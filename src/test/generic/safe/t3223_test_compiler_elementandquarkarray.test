## -*- mode:ulam -*-
#=t3223_test_compiler_elementandquarkarray
#!
Exit status: -11
Ue_Foo { typedef Bar Pop[2];  System s();  Bool(3) b(false);  Int(4) m_i(0);  Bar m_bar2[2]( Bool val_b[3](false,false,false);  Bool val_b[3](false,false,false); );  Bar sbar( Bool val_b[3](false,false,false); );  Int test() {  Atom a;  a self sbar . ( 0 cast )aref . = self sbar . ( 1 cast )aref . a = 0 cast return } }
Uq_System { <NOMAIN> }
Uq_Bar { Bool val_b[3](false,false,false);  <NOMAIN> }
##
##  native aref is UNEVALUABLE
##
#>Foo.ulam
  ulam 1;
use System;
use Bar;
element Foo {
  typedef Bar Pop[2];
  System s;
  Bool(3) b;
  Int(4) m_i;
  Pop m_bar2;
  Bar sbar;
  Bool check(Int v) {
    return true;
  }
  Int test() {
    Atom a;
    a = sbar[0];
    sbar[1] = a;
    return 0;
  }
}

#:Bar.ulam
  ulam 1;
quark Bar {
  Bool val_b[3];
  Void reset(Bool b) {
    b = false;
  }
  Atom& aref(Int index) native;

  Atom& getatomof()
  {
    Atom a = self.atomof;
    return self.atomof;
  }

  Atom& getatomofelement()
  {
    Foo foome;
    return foome.atomof;
  }

  //  Void aset(Int index, Atom v) native;
}

#:System.ulam
  ulam 1;
quark System {
  Void print(Unsigned arg) native;
  Void print(Int arg) native;
  Void print(Int(4) arg) native;
  Void print(Int(3) arg) native;
  Void print(Unary(3) arg) native;
  Void print(Bool(3) arg) native;
  Void assert(Bool b) native;
}
#.
