## -*- mode:ulam -*-
#=t41317_test_compiler_elementandquark_multibases_virtualfuncswsharedancestoranddatamembercopies
##
## gen output:
## Int Arg: 410 (+ 3 assert)
##
#!
Exit status: 0
Ue_Foo +System { Int m_c4(0);  Int m_a4(410);  +System<> Int test() {  E4 e4;  typedef QBase2 QB2;  typedef QBase1 QB1;  self m_a4 . e4 ( )vfunca . = self ( self m_a4 . )print . self ( self m_a4 . 410 cast == )assert . self ( e4 m_b1 . )assert . self ( e4 m_b4 . )assert . 0 cast return } }
Uq_System { <NOMAIN> }
Ue_E4 : QBase3 +QBase2 +QBase1 { Bool m_b4(false);  typedef QBase2 QB2;  :QBase3< Bool m_b3(false); > +QBase2< Bool m_b2(false); > +QBase1< Bool m_b1(false); > <NOMAIN> }
Uq_QBase3 : QBase1 { Bool m_b3(false);  :QBase1< Bool m_b1(false); > <NOMAIN> }
Uq_QBase2 +QBase1 { Bool m_b2(false);  +QBase1< Bool m_b1(false); > <NOMAIN> }
Uq_QBase1 { Bool m_b1(false);  <NOMAIN> }
##
##       informed by t41310; here we call concrete class' 'override,
##       and change its data member, as well as a shared bases (QB1) dm.
##       (but which one? ans: the first in base order, QB3);
##
#>Foo.ulam
  ulam 5;
element Foo +System {
  Int m_c4;
  Int m_a4;

  Int test()
  {
    E4 e4;

    typedef E4.QB2 QB2;
    typedef QBase3.Super QB1;

    m_a4 = e4.vfunca(); //410
    print(m_a4);
    assert(m_a4==410);

    //multiple copies of QBase1: SHARED
    assert(e4.m_b1);
    assert(e4.m_b4);
    return 0;
  }
}


#:E4.ulam
  ulam 5;
element E4 : QBase3 +QBase2 +QBase1 {
  Bool m_b4;
  virtual Int vfuncc() { return 412; }
  virtual Int vfunca() { m_b1 = true; m_b4 = true; return 410; }
  virtual Void behave() { }
  typedef QBase2 QB2;
}

#:QBase1.ulam
    ulam 4;
quark QBase1 {
  Bool m_b1;
  Void funcNotVirtualSoIrrelevantHere() { }
  virtual Int vfunca() { m_b1 = true; return 110; }
}

#:QBase2.ulam
  ulam 5;
quark QBase2 +QBase1 {
  Bool m_b2;
  virtual ARGB getColor(Unsigned s) { return super.getColor(s); }
  virtual Int vfuncc() { m_b2 = true; return 212; }
}

#:QBase3.ulam
  ulam 4;
quark QBase3 : QBase1 {
  Bool m_b3;
  virtual Int vfuncb() { return 311; }
}


#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}

#.
