## -*- mode:ulam -*-
#=t3559_test_compiler_elementinheritances_casting
## gencode output (+ assert):
## Bool(3) Arg: 0x7 (true)
##
#!
Exit status: 77
Ue_Foo : Soo { Bool(7) sp(true);  Int a(73);  :Soo< Unsigned(3) us(4u);  :Coo< Bool(3) cb(true); >> ^Coo< Bool(3) cb(true); > Int test() {  System s;  Foo f;  Coo c = f cast;  { c cb . cond { self sp . c cb . cast = s ( c cb . )print . s ( c cb . cast )assert . f us . cast f a . +b return } if } 0 cast return } }
Uq_System { <NOMAIN> }
Uq_Soo : Coo { Unsigned(3) us( 4u);  :Coo< Bool(3) cb( true); > <NOMAIN> }
Uq_Coo { Bool(3) cb( true);  <NOMAIN> }
##
## chained class inheritance, regular (non-template), with casting
## informed by t3229
##
#>Foo.ulam
  ulam 2;
use System;
use Soo;
element Foo : Soo {
  Bool(7) sp;
  Int a = 73;
  Int test() {
    System s;
    Foo f;
    Coo c = (Coo) f;
    if(c.cb)
    {
      sp = c.cb; //was inf loop!!!
      s.print(c.cb);
      s.assert(c.cb);
      return f.us + f.a;
    }
    return 0;
  }
}

#:Soo.ulam
  ulam 2;
use Coo;
quark Soo : Coo {
  Unsigned(3) us = 4u;
}

#:Coo.ulam
  ulam 2;
quark Coo {
  Bool(3) cb = true;
}

#:System.ulam
  ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}

#.
