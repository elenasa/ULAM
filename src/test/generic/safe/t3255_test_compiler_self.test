## -*- mode:ulam -*-
#=t3255_test_compiler_self
##   gen code output: (interleaved asserts)
##	 Bool(3) Arg: 0x7 (true)
##	 Bool(3) Arg: 0x7 (true)
##	 Bool(3) Arg: 0x0 (false)
##
#!
Exit status: 1
Ue_S { System s();  Bool sp(false);  Bool(3) b1(false);  Bool(3) b2(true);  Int test() {  Atom a;  Atom t;  a self cast = { a S as cond { S& a;  self b2 . a ( )func . cast = } if } self s . ( self b2 . )print . self s . ( self b2 . cast )assert . self b1 . self ( a )func . cast = self s . ( self b1 . )print . self s . ( self b1 . cast )assert . self b1 . self ( t )func . cast = self s . ( self b1 . )print . self s . ( self b1 . ! cast )assert . self b2 . cast return } }
Uq_System { <NOMAIN> }
#>S.ulam
 ulam 1;
use System;
element S{
  System s;
  Bool sp;
  Bool(3) b1, b2;
  Bool func() {
    return (self is S);
  }
  Bool func(Atom d) {
    return (d is S);
  }
  Int test() {
    Atom a, t;
    a = self;
    if(a as S)
      b2 = a.func();
    s.print(b2);
    s.assert(b2); //true
    b1 = func(a);
    s.print(b1);
    s.assert(b1); //true
    b1 = func(t);
    s.print(b1);
    s.assert(!b1); //false
    return (Int) b2;
  }
}
##      // test system quark with native overloaded print funcs; assert
##      // simple case:
##      //bool rtn1 = fms->add("S.ulam"," ulam 1;\n element S{\nBool sp;\n Bool(3) b1, b2;\n Int test() {\nAtom a;\n a = self;\n self = a;\n return 0;\n }\n }\n");
##
##      //over loading works here..
##      //bool rtn1 = fms->add("S.ulam"," ulam 1;\n element S{\nBool sp;\n Bool(3) b1, b2;\n Bool func() {\n return (self is S);\n}\n  Bool func(Atom d) {\n return (d is S);\n}\n Int test() {\nAtom a;\n  b1 = func();\n  b2 = func(a);\n  return b2;\n }\n }\n");
##
##      // works
##      //bool rtn1 = fms->add("S.ulam"," ulam 1;\n element S{\nBool sp;\n Bool(3) b1, b2;\n Bool func() {\n return (self is S);\n}\n  Bool func(Atom d) {\n return (d is S);\n}\n Int test() {\nAtom a;\n b2 = self.func();\n b1 = self.func(a);\n return b2;\n }\n }\n");
##
##      // here, only the first definition takes..then the m_funcSymbol for the second one is NULL in eval..
##      // fixed bug in NodeMemberSelect (no ERR MSG).
#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
