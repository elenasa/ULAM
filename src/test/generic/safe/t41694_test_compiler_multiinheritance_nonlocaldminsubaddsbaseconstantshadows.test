## -*- mode:ulam -*-
#=t41694_test_compiler_multiinheritance_nonlocaldminsubaddsbaseconstantshadows
##  gen output: (+ 1 assert)
##  Int Arg: 2
##
#!
Exit status: 2
Ue_Foo +System { Int m_qadd(2);  +System<> Int test() {  E4 e4;  self m_qadd . e4 ( )getAdd . = self ( self m_qadd . )print . self ( self m_qadd . 2 cast == )assert . self m_qadd . return } }
Uq_System { <NOMAIN> }
Ue_E4 : QBase2 +QBase3 +QBaseLast { Int m_add( 2);  :QBase2< constant Int(8) m_q = 1; > +QBase3< Int(8) m_q( 4); > +QBaseLast< Int(8) m_q( 17); > ^QBase1<> <NOMAIN> }
Uq_QBase2 +QBase1 { constant Int(8) m_q = 1;  +QBase1<> <NOMAIN> }
Uq_QBase3 : QBase1 { Int(8) m_q( 4);  :QBase1<> <NOMAIN> }
Uq_QBaseLast { Int(8) m_q( 17);  <NOMAIN> }
Uq_QBase1 { /* empty class block */ }
##
## A subclass DM, m_add in E4, behaves differently than as local var (t41692);
##  QBase2.m_q has to be a constant (see also t41693).
##
#>Foo.ulam
  ulam 5;
element Foo +System {
  Int m_qadd;
  Int test()
  {
    E4 e4;
    m_qadd = e4.getAdd();
    print(m_qadd);
    assert(m_qadd==2);
    return m_qadd;
  }
}


#:E4.ulam
  ulam 5;
element E4 : QBase2 +QBase3 +QBaseLast {
  Int m_add = m_q + m_q; // ==2  doesn't work as DM t41693
  Int getAdd(){
    //Int m_add = m_q + m_q; // ==2  works as local var t41692
    return m_add;
  }
}

#:QBase1.ulam
    ulam 4;
quark QBase1 {
}

#:QBase2.ulam
  ulam 5;
quark QBase2 +QBase1 {
  constant Int(8) m_q = 1; //first one has to be a constant for this to work
}

#:QBase3.ulam
  ulam 4;
quark QBase3 : QBase1 {
  Int(8) m_q = 4;
}

#:QBaseLast.ulam
  ulam 4;
quark QBaseLast {
  Int(8) m_q = 17;
}


#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}

#.
