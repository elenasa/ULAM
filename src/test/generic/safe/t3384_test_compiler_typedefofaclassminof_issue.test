## -*- mode:ulam -*-
#=t3384_test_compiler_typedefofaclassminof_issue
##      //test bug fix: typedef of a class' typedef
##      //Ish2.ulam:6:16: ERROR: Invalid Class Type: <Tail>; KEYWORD should be: 'element', 'quark', or 'union'.
##      //							    ERROR: No parse tree for This Class: Ish2.
##
#!
Exit status: 7
Ue_R { Ish3 ish( Colony(3u) colony( constant Unsigned widthc = 3u;  typedef Telomeree(3u) Telo; ); );  Int test() {  self ish . colony . ( )foo . cast return } }
Uq_Ish3 { Colony(3u) colony( typedef Telomeree(3u) Telo; );  <NOMAIN> }
Uq_Colony(Unsigned widthc) { typedef Telomeree(width) Telo;  <NOMAIN> }
Uq_Telomeree(Unsigned width) { typedef Unsigned(UNKNOWN) Tail;  Unsigned(UNKNOWN) age(notready);  <NOMAIN> }
##
##       // likes Telomeree first! (see t3565 breaks)
#>R.ulam
  ulam 1;
//use Ish3;
element R{
  Ish3 ish;
  Int test() {
    return (Int) ish.colony.foo();
  }
}
#:Colony.ulam
  ulam 1;
//use Telomeree;
quark Colony(Unsigned widthc){
  typedef Telomeree(widthc) Telo;
  Unsigned foo() {
    return Telo.Tail.maxof;
  }
}

#:Ish3.ulam
  ulam 1;
//use Colony;
quark Ish3{
  Colony(3) colony;
}

#:Telomeree.ulam
  ulam 1;
quark Telomeree(Unsigned width){
  typedef Unsigned(width) Tail;
  Tail age;
}
##      //bool rtn3 = fms->add("R.ulam", "use Telomeree;\n use Colony;\n use Ish3;\n  element R{\nIsh3 ish;\n Int test() { return 0;\n}\n}");
##      //      bool rtn3 = fms->add("R.ulam", "use Ish3;\n  element R{\nIsh3 ish;\n Int test() { return 0;\n}\n}");
##
##
##      //bool rtn1 = fms->add("Colony.ulam","quark Colony(Unsigned widthc){\n typedef Telomeree(widthc) Telo; \n  Bool foo() {\n Telo tail;\n if (tail.age >= Telomeree(widthc).Tail.maxof) {\n return true;\n }\n  /* if (tail.age >= Telo.Tail.maxof) {\n return true;\n }\n */ }\n }");
##
##      //rtn1 simplified for debugging..
##      //bool rtn1 = fms->add("Colony.ulam","quark Colony(Unsigned widthc){\n typedef Telomeree(widthc) Telo; \n Unsigned foo() {\n Telo tail;\n return Telomeree(widthc).Tail.maxof;\n }\n }");
##
#.
