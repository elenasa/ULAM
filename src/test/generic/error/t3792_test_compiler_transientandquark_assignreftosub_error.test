## -*- mode:ulam -*-
#=t3792_test_compiler_transientandquark_assignreftosub_error
#!
./R.ulam:18:5: ERROR: Incompatible class types TW& and Qbase& used to initialize reference 'twref'.
./R.ulam:21:19: ERROR: Cannot cast an atom to transient TW.
./R.ulam:21:19: ERROR: Cannot explicitly cast Atom& to type: TW.
./R.ulam:21:5: ERROR: Initial value expression for: tapple3, initialization is invalid.
Unrecoverable Program Type Label FAILURE.
##
## informed by t3789
##
#>R.ulam
  ulam 2;
element R {
  Int test(){
    System s;
    TW tw;
    //case 1: CastDecendentTransient
    Qbase& qref = tw;

    //case 2:  (init) CastAncestorQuarkAsSubTransient
    TW tapple = (TW) qref; //unused var (qref read)

    //case 3: (assignment) CastAncestorQuarkAsSubTransient
    TW tapple2;
    tapple2 = (TW) qref; //unused var (qref read)

    //case 4:  (init to ref) CastAncestorQuarkAsSubTransient
    //ERROR: Incompatible class types TW& and Qbase& used to initalize reference 'twref'.
    TW& twref = qref;

    //case 5: ERROR: Cannot cast an atom to transient T.
    TW tapple3 = (TW) qref.atomof;

    //case 6:
    //TW& tappleref = (TW&) qref; //unused var (qref read);

    //case 7: FAILS NOT_AN_ELEMENT (runtime)
    Atom & atr = qref.atomof;

    //case 8: FAILS NOT_AN_ELEMENT (runtime)
    Atom a = qref.atomof;
    return 0;
  }
}

#:TW.ulam
  ulam 2;
transient TW : QW {
  Bool b, c;
}

#:QW.ulam
  ulam 2;
quark QW : Qbase{
  Bool bw;
  Self func()
  {
    Atom a = self.atomof;
    Self& sra = (Self&) a; //immediate quark with current values
    return sra;
  }
}

#:Qbase.ulam
  ulam 2;
quark Qbase{
  Unary(5) m_five;
}

#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
