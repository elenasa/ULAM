## -*- mode:ulam -*-
#=t3733_test_compiler_elementandquark_castatomtoclassref_error
#!
##./QW.ulam:8:18: ERROR: Cannot explicitly cast Atom to type: QW.
##./QW.ulam:8:5: ERROR: Initial value expression for: sra, initialization is invalid.
##./QW.ulam:8:5: ERROR: Storage expression for: sra, is invalid.
./QW.ulam:8:5: ERROR: Initialization for: sra, must be referenceable.
Unrecoverable Program Type Label FAILURE.
##
## informed by t3692; now just a cast to ref error (ulam-3)
##
#>A.ulam
  ulam 2;
use System;
use QW;
element A : QW {
  Bool c;
  Int test(){
    System s;
    Qbase& qref = self;
    qref.m_five = 0x3;

    Atom & aref = self; //ERROR for NOW.
    aref = qref.atomof; //atom ref assignment
    qref.m_five = 0x5;
    A apple = (A) aref;
    c = (apple.m_five == 0x5);
    s.assert(c);

    return (Int) c;
  }
}

#:QW.ulam
  ulam 3;
use Qbase;
quark QW : Qbase{
  Bool bw;
  Self func()
  {
    Atom a = self.atomof;
    Self& sra = (Self) a; //ERROR requires Self& cast, or change 'sra' to non-ref Self.
    return sra;
  }
}

#:Qbase.ulam
  ulam 2;
quark Qbase{
  Unary(5) m_five;
}

#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
