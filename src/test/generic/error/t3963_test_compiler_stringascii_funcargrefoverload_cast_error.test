## -*- mode:ulam -*-
#=t3963_test_compiler_stringascii_funcargrefoverload_cast_error
#!
./HelloWorldString.ulam:8:13: ERROR: Cannot explicitly cast a constant, "Hello world", type String, to a reference type, String&.
./HelloWorldString.ulam:8:5: ERROR: Argument 1 has a problem.
./HelloWorldString.ulam:9:12: ERROR: (1) 'getLength' has no defined function with 1 matching argument type: String, and cannot be called.
./HelloWorldString.ulam:9:10: ERROR: Assignment is invalid; LHS: unresolved; RHS: erroneous.
Unrecoverable Program Type Label FAILURE.
##
## informed by t3962
##
#>HelloWorldString.ulam
  ulam 3;
element HelloWorldString : FString("Hello world")
{
  Bool b1;
  Int slen;
  Int test() {
    System s;
    getFoo((String&) msg); //error! cannot cast a constant to a ref
    slen = getLength(msg); // =3
    s.print(slen);
    b1 = (slen == 3);
    s.assert(b1);
    return 0;
 }
}

#:FString.ulam
  ulam 3;
quark FString(String msg) {
  typedef Unsigned(8) StringIndex;
  typedef Unsigned(5) CharDim;
  StringIndex mIndex;  // Glyph within string
  CharDim mCol;        // Site x within glyph, with baseline start at (0,0)
  CharDim mRow;        // Site y within glyph, with baseline start at (0,0)
  virtual Void behave() {
    String s = msg;
  }
  Int getLength(String& stref)
  {
    return (Int) stref.lengthof;
  }
  Void getFoo(String& stref)
  {
    return (Void) (stref = "foo");
  }
  Void getFoo(String str)
  {
    return (Void) (str = "gabbagoo");
  }
}


#:System.ulam
  ulam 1;
quark System {
  Void print(Unsigned arg) native;
  Void print(Int arg) native;
  Void print(Int(4) arg) native;
  Void print(Int(3) arg) native;
  Void print(Unary(3) arg) native;
  Void print(Bool(3) arg) native;
  Void assert(Bool b) native;
}
#.
