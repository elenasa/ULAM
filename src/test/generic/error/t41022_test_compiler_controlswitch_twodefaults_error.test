## -*- mode:ulam -*-
#=t41022_test_compiler_controlswitch_twodefaults_error
#!
./A.ulam:21:5: ERROR: Multiple 'otherwise' labels in one which-control statement; first one on line 17.
./A.ulam:21:14: ERROR: Incomplete condition; which-control failure.
./A.ulam:21:14: ERROR: Unexpected token <TOK_COLON>; Expected }.
./A.ulam:21:14: ERROR: Invalid Statement (possible missing semicolon).
./A.ulam:24:2: ERROR: Break statement not within loop or which-control.
./A.ulam:27:5: ERROR: Invalid Class Type <s>; KEYWORD should be 'element', 'quark', 'union', or 'transient', or 'local'.
Unrecoverable Program Parse FAILURE: <A.ulam>
./A.ulam:27:6: ERROR: Invalid Class Type <.>; KEYWORD should be 'element', 'quark', 'union', or 'transient', or 'local'.
Unrecoverable Program Parse FAILURE: <System.ulam>
##
## like C++ error message
##
#>A.ulam
  ulam 3;
element A {
  System s;
  Int a, b;
  Int test() {
    a = 2;
    b = 0;
    which((--a))
    {
    case -1:
      {
	b = 3;
	break;
      }
    case 0:
    otherwise:
      {
	b = 2;
	break;
      }
    otherwise:
      {
	b = 1; //<- hits
	break;
      }
    }
    s.print(b);
    s.assert(b == 1);
    s.print(a);
    s.assert(a == 1);
    return a;
  }
}

#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
