## -*- mode:ulam -*-
#=t41110_test_compiler_element_operatoroverloadinvaliddualop_error
#!
./Foo.ulam:9:27: ERROR: Weird Lex! <**> isn't an overloadable operation.
./Foo.ulam:9:12: ERROR: Right operand of binary = is missing; Assignment deleted.
./Foo.ulam:9:28: ERROR: Invalid Statement (possible missing semicolon).
./Foo.ulam:19:17: ERROR: Weird Lex! <**> isn't an overloadable operation.
./Foo.ulam:19:24: ERROR: Expected a dot prior to named constant 'fref'.
./Foo.ulam:19:18: ERROR: Bit size after Open Paren is missing, type: Bool.
./Foo.ulam:20:3: ERROR: Name of variable/function '{': Identifier must begin with a lower-case letter.
./Foo.ulam:2:1: ERROR: Empty/Incomplete Class Definition 'Foo'; Possible missing ending curly brace.
./Foo.ulam:20:3: ERROR: Invalid Class Type <{>; KEYWORD should be 'element', 'quark', 'union', or 'transient', or 'local'.
./Foo.ulam:2:9: ERROR: Invalid Type: Foo.
 ERROR: No parse tree for This Class: Foo.
Unrecoverable Program Parse FAILURE: <Foo.ulam>
./Foo.ulam:21:5: ERROR: Invalid Class Type <return>; KEYWORD should be 'element', 'quark', 'union', or 'transient', or 'local'.
Unrecoverable Program Parse FAILURE: <System.ulam>
##
## informed by t41105 and t41109; seg fault fixed.
##
#>Foo.ulam
  ulam 3;
element Foo {
  Bool first;
  Int fint, opfint;
  Int test() {
    System s;
    Foo foo;
    foo.fint = 2;
    opfint = foo.operator**(3);
    s.print(opfint);
    s.assert(opfint == 5);

    return opfint;
  }

  //ERROR, dual op overload operator with Class arg type
  // LOW_LEVEL_ERROR on operator&& ignored, that landed in parser code that assumed a dot between Foo and fref
  // and looked for a named constant in another class as part of Bool bit size. Fixed.
  Bool operator**(Foo& fref)
  {
    return true;
  }
}

#:System.ulam
  ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}

#.
