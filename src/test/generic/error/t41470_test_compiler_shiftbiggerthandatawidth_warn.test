## -*- mode:ulam -*-
#=t41470_test_compiler_shiftbiggerthandatawidth_warn
#!
./A.ulam:7:12: Warning: Shift distance greater than data width, operation <<.
Exit status: 64
Ue_A { Bits(64) a(HexU64(0x0, 0x0));  constant Unsigned d = 64u;  typedef Q1(66u) Q1D2;  Int test() {  self a . self a . 65 cast << = 64u cast return } }
Uq_Q1(Unsigned x) : Q2(y) { /* empty class block */ }
Uq_Q2(Unsigned y) { /* empty class block */ }
##
##      //informed by Dave's ish 20210602, changed test to > from >=;
##      reduced number of "warnings" by not including warning count in c&l results.
##
#>A.ulam
  ulam 1;
element A {
  Bits(64) a = 8;
  constant Unsigned d = 64; //must be a constant, not a variable, > wordsize of 'a'
  typedef Q1(d+2) Q1D2; //for hazy goAgain
  Int test(){
    a = (a << (d + 1));
    return d;
  }
}

#:Q1.ulam
  ulam 5;
quark Q1(Unsigned x) : Q2(x+2)
{}

#:Q2.ulam
  ulam 5;
quark Q2(Unsigned y)
{}

#.
